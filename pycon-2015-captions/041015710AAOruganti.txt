          041015710AAORUGANTI


10:27:12  >> HI, EVERYONE.
10:30:43  SO THE NEXT SPEAKER IS ASHWINI ORUGANTI, AND
10:30:45  THE TITLE OF HER TALK IS INTRODUCTION TO
10:30:49  HTTPS:  A COMEDY OF ERRORS.
10:30:54  SO PLEASE WELCOME HER.
10:30:59  >>  HI, EVERYONE.
10:31:02  I'M ASHWINI.
10:31:03  I WRITE A LOT OF CODE OF -- WHAT'S THAT?
10:31:10  OKAY.
10:31:10  YEAH, [INAUDIBLE] IN THE PAST, AND HIPPY VM,
10:31:15  WHICH IS A PHP VIRTUAL MACHINE WRITTEN BY
10:31:20  PYTHON.
10:31:21  AND I'VE ALSO SPENT SOME TIME IN [INAUDIBLE]
10:31:24  TRYING TO READ A TLS 1.2 IMPLEMENTATION AND
10:31:30  PYTHON.  TODAY I'M GOING TO TALK ABOUT HTTPS.
10:31:32  SO LET'S START WITH SOME CODE.
10:31:37  IT'S A SIMPLE LINE THAT TRIES TO OPEN A
10:31:40  WEBSITE, GIVE IT SOME DATA, IN THIS CASE,
10:31:45  SECRET -- A SECRET AS A TOKEN.
10:31:50  AND THERE'S HTTPS IN THE URL, SO IT LOOKS
10:31:54  SECURE, RIGHT?
10:31:54  I MEAN, HTTPS STANDS FOR HTTP SECURE.
10:32:02  YOU WOULD THAT I IT.
10:32:08  AS BAD AS NOT USING ANY ENCRYPTION AT ALL.
10:32:16  SPOOFS ON THE NETWORK CAN STEAL THE SECRET
10:32:04  SADLY, THIS IS PRETTY MUCH INSECURE, AND IT'S
10:32:20  WITH NOT MUCH WORK.
10:32:21  THE PROBLEM HERE IS THAT YOUR [INAUDIBLE]
10:32:23  DOES NOT VALIDATE OR CERTIFICATE IT AT ALL.
10:32:28  PYTHON 2.7.9, WHICH WAS RELEASED A FEW MONTHS
10:32:31  AGO SUPPORTS TLS VALIDATION BUT EVEN THEN
10:32:35  IT'S NOT ALL BY DEFAULT.
10:32:38  AND THERE WAS NO SUPPORT FOR IT AT ALL BEFORE
10:32:39  THAT.
10:32:42  BEFORE MOVING ON, LET'S TALK A BIT ABOUT THE
10:32:44  TYPES OF ATTACKS THAT CAN HAPPEN ON ANY KIND
10:32:48  OF COMMUNICATION.
10:32:49  THERE A'S PASSIVE ATTACKS WHERE THE ATTACKER
10:32:53  ONLY NEEDS TO BE ABLE TO LISTEN TO THE
10:32:55  COMMUNICATION WITHOUT INJECTING A
10:32:59  [INAUDIBLE].
10:33:00  FOR EXAMPLE, A CRYPTO FLAW MIGHT ALLOW AN
10:33:05  ATTACKER TO READ YOUR DOC.
10:33:11  ACTIVE ATTACKS ALLOWS SENDING DATA TO EITHER
10:33:16  PARTY OR TRAFFIC.
10:33:17  THIS USUALLY TAKES THE FORM OF A MAN IN THE
10:33:20  MIDDLE ATTACK.
10:33:22  TLS IS LARGELY NOT VULNERABLE TO PASSIVE
10:33:29  BEFORE LEARNING HOW THE SECURITY HOLE I
10:33:33  SHOWED YOU CAN BE FIXED, LET'S LEARN A LITTLE
10:33:25  ATTACKS BUT THERE IS ALWAYS THE POSSIBILITY.
10:33:36  ABOUT TLS.
10:33:37  MOST OF THE -- I KNOW THIS IS MISLEADING
10:33:40  BECAUSE THE TOPIC SAYS HTTPS.
10:33:43  MOST OF THE ATTACK IS ABOUT TLS BECAUSE HTTPS
10:33:47  IS MOSTLY HTTPS ON TLS.
10:33:52  BEFORE WE MOVE ON.
10:33:53  SSL IS SECURITY SOCKETS.
10:33:56  SSL IS OLD AND BUSTED AND SHOULDN'T BE USED
10:33:58  ANYMORE. I MEAN, THE MOST RECENT LATEST
10:34:02  RELEASE OF SSL, SSL 2.0 WAS IN 1996.
10:34:09  AND TLS 1.0 WAS FIRST RELEASED IN 1999.
10:34:13  AND TLS 1.2, WHICH WAS THE MOST RECENT ONE
10:34:16  NOW, WAS RELEASED IN 20082008.
10:34:19  SO TLS HAS SUPERSEDED SSL.
10:34:24  DON'T USE SSL.
10:34:25  PLEASE USE TLS.
10:34:27  NOW, TLS WAS DESIGNED TO SECURE TCP
10:34:31  CONNECTIONS.
10:34:31  THERE ARE TWO ASPECTS OF ACTUALLY DOING THE
10:34:34  SECURING.
10:34:36  CERTIFICATE CAN BE USED FOR AUTHENTICATION.
10:34:40  LIKE CERTIFICATES ALLOW US TO IDENTIFY A PEER
10:34:46  THE ENCRYPTION IS PRETTY MUCH USELESS.
10:34:50  IT'S LIKE PICKING UP A PHONE AND ACTUALLY
10:34:44  WITHOUT AUTHENTICATION.
10:34:52  VERIFYING WHO YOU'RE TALKING TO BEFORE YOU
10:34:54  GIVE THEM YOUR CREDIT CARD NUMBERS.
10:34:55  I MEAN, DON'T DO THAT.
10:34:57  THAT'S LIKE BAD.
10:34:58  BUT STILL.
10:34:59  SO A VALIDATION ANSWERS QUESTIONS LIKE CAN I
10:35:03  TRUST THIS WEBSITE.
10:35:06  SPECIFICALLY, IS THIS WEBSITE BEING SERVED BY
10:35:09  THE SAME PERSON WHO OWNS THE CERTIFICATE FOR
10:35:12  THE WEBSITE.
10:35:13  THIS IS A FORM OF AUTHENTICATION BECAUSE IT'S
10:35:16  A VERIFICATION OF IDENTITY.
10:35:20  SO HOW DOES VALIDATION REALLY WORK?
10:35:23  THE VALIDATE CERTIFICATES BY USING PUBLIC
10:35:27  INFRASTRUCTURE.
10:35:29  SO WEBSITES HAVE CERTIFICATES WHICH ARE
10:35:31  AUTHORIZED BY ORGANIZATIONS CALLED
10:35:35  CERTIFICATE AUTHORITIES, RCAS.
10:35:38  THE CA AUTHORIZES CERTIFICATES WITH
10:35:42  CRYPTOGRAPHIC NATURES.
10:35:44  YOUR COMPUTER HAS A BIG LIST OF CAS THAT IT
10:35:47  TRUSTS.
10:35:49  IT GOES TO ITS DATABASE OF CAS CHECKING IF IT
10:35:53  IS SIGNED BY ANY.
10:35:47  SO WHENEVER A CLIENT RECEIVES A CERTIFICATE,
10:35:54  AFTER THAT, IT CAN DECIDE IF IT TRUSTS THE
10:35:56  WEBSITE OR NOT.
10:35:59  OR NOT.
10:36:00  SO THERE WOULD STILL BE SOMETHING MISSING.
10:36:05  IMAGINE BOB'S IT PERSON GETS A CERTIFICATE
10:36:07  FOR BOB'S BURGERS.COM.
10:36:10  IT IS SIGNED BY A TRUSTED CA, SO IT'S TOTALLY
10:36:15  LEGITIMATE.
10:36:15  SO BUT THE IT PERSON GOES TO STARBUCKS AND
10:36:19  SETS UP A SPOOF SERVER THAT READ TLS TO.COM
10:36:25  TO THEIR LAPTOP.
10:36:26  SO THEY USED THE BOB'S BERGERES FOR THE
10:36:30  WEBSITE, RIGHT?
10:36:31  SO THE CLIENT WOULD SAY THAT LOOKS GOOD
10:36:34  BECAUSE IT'S SIGNED BY MY CA BUNDLE.
10:36:36  BUT THAT'S LIKE WRONG.
10:36:37  SO FORTUNATELY WE HAVE HOSTING CHECKING TO
10:36:40  THE RESCUE.
10:36:41  CLIENTS CAN CHECK THAT THE HOST NAME ON THE
10:36:44  CERTIFICATE THEY RECEIVED IS THE SAME THAT
10:36:46  THEY REQUESTED.
10:36:47  NOW, THIS IS AN IMPORTANT LINE OF DEFENSE
10:36:54  THERE ARE OTHER THINGS, OF COURSE, THAT WE
10:36:55  MUST CHECK WHEN VALIDATING A TLS CERTIFICATE
10:36:51  AGAINST MIT ATTACKS.
10:36:58  PROPERLY.
10:36:59  FOR EXAMPLE, IS THE CERTIFICATE PAST ITS
10:37:01  EXPIRATION DATE.
10:37:03  AND IF THE CERTIFICATE WAS COMPROMISED, IT
10:37:06  CAN ALSO BE REVOKED.
10:37:10  REVOCATION IS A WHOLE DIFFERENT DOC, IT'S A
10:37:13  WHOLE DIFFERENT MESS, AND I WON'T SPEAK OF IT
10:37:15  NOW.
10:37:15  BUT JUST SAYING IT'S THERE.
10:37:16  SO THAT WAS AUTHENTICATION AND CERTIFICATE
10:37:20  VALIDATION.
10:37:20  NEXT COMES THE ACTUAL ENCRYPTION.
10:37:25  SO FOR THE PURPOSE OF THIS TALK I'M GOING TO
10:37:27  LET IT BE A BLACK BOX, AND FOR MOST NORMAL
10:37:30  USAGE IN OUR DAY-TO-DAY LIVES WE DON'T NEED
10:37:33  TO KNOW WHAT THE MAGICAL THING THAT
10:37:35  ENCRYPTION IS.
10:37:36  SO I'M JUST GOING TO MOVE ON AND NOT LIKE
10:37:39  [INAUDIBLE] ABOUT THIS.
10:37:40  INSTEAD I'M GOING TO TALK ABOUT TLS MORE.
10:37:46  SO HOW DOES IT WORK?
10:37:47  LET'S TRY AND WALK THROUGH A TLS SESSION
10:37:58  TLS IS A PROTOCOL.
10:37:59  SO THERE'S A SERVER AND A CLIENT INVOLVED.
10:37:51  NEGOTIATION TO SEE THIS.
10:38:01  THE FIRST AND THE MOST IMPORTANT THING ABOUT
10:38:05  TLS IS THE HANDSHAKE.
10:38:08  SO THE CLIENT TRIES TO ESTABLISH A CONNECTION
10:38:10  BY SENDING A CLIENT HELLO MESSAGE.
10:38:15  AND WHILE A LOT OF STUFF FOLLOWS, THIS IS
10:38:17  KIND OF A HIGH LEVEL LOOK AT IT.
10:38:20  THE SERVER RESPONDS WITH A SERVER HELLO.
10:38:24  THEY EXCHANGE INFORMATION, KEYS AND OTHER
10:38:26  THINGS NEEDED TO ESTABLISH A SECURE
10:38:30  CONNECTION.
10:38:30  AND THEN LIKE A LOT OF [INAUDIBLE] ARE MADE.
10:38:34  THEY NEED TO AGREE ON A PROTOCOL VERSION, HOW
10:38:38  TO GUARD THEM.
10:38:40  CYBER SUITE.
10:38:41  BUT ONCE ALL THESE DECISIONS ARE MADE, IT'S A
10:38:44  MAGICAL MATH, AND A COUPLE OF TLS MESSAGES,
10:38:48  THE SUITE OF ENCRYPTION IS FLIPPED, AND, YEA,
10:38:54  EVERYTHING IS SECURE.
10:38:58  NEXT, I WANT TO TALK ABOUT TWO VERY BROAD
10:39:02  CLASSES OF SOFTWARE.
10:39:04  FIRST LET'S LOOK AT THE ONES THAT HOW TLS IS
10:39:08  IMPLEMENTED.
10:39:11  I'M JUST GOING TO THROW SOME TLS
10:39:14  IMPLEMENTATIONS AT YOU.
10:39:09  SO SOFTWARE THAT IMPLEMENTS TLS.
10:39:15  I'M NOT GOING TO DISCUSS EACH ONE OF THEM
10:39:17  SPECIFICALLY.
10:39:18  BUT, YEA.
10:39:20  OPEN SSL, VERY POPULAR.
10:39:25  [INAUDIBLE] SSL, A DISCLAIMER HERE, I DON'T
10:39:27  THINK [INAUDIBLE] SSL HAS A GUARANTEED OR
10:39:32  STABLE INTERFACE SO IT'S NOT FOR ANYONE BUT
10:39:35  GOOGLE YET.
10:39:37  THERE'S SECURE TRANSPORT, APPLE STING.
10:39:39  THERE'S NEW TLS FOR LINUX HIPPIES.
10:39:44  SO ALL THESE IMPLEMENTATIONS HAVE A LOT OF
10:39:48  FLAWS.
10:39:50  BOTH IN THE WAY THAT THEY'RE IMPLEMENTED AND
10:39:52  IN THE APIS THAT THEY EXPOSE APIS THAT THEY
10:39:59  EXPOSE.
10:40:01  THERE IS A COMMONALITY IN ALL THE
10:40:03  IMPLEMENTATIONS OF TLS.
10:40:05  THEY ARE ALL IN EITHER C OR C++.
10:40:08  THEY HAVE ALL HAD BUCKS BUGS CAUSED BY MEMORY
10:40:12  AND SAFETY OF THE.
10:40:15  SOME OF THEM ARE REALLY BIG.
10:40:17  HEART BLEED ALLOWED ATTACKERS TO STEAL AND
10:40:23  IT WAS NOT A CRYPTO FLAW.
10:40:26  IT WAS JUST A CLASSIC CODE AND SEE MOMENT.
10:40:19  RETREAT RANDOM DATA FROM THE RAM.
10:40:29  A LOT OF FLAWS ARE JUST PLAIN LOGIC ERRORS,
10:40:32  TOO.
10:40:33  MULTIPLE TLS IMPLEMENTATIONS HAD A BUG
10:40:36  ACCEPTING ANY CERTIFICATE AS VALID IF IT WAS
10:40:40  SIGNED BY A TRUSTED NON-CA CERTIFICATE.
10:40:44  I REPEAT, EVEN IF THE CERTIFICATE IS NOT A
10:40:47  CERTIFICATE AUTHORITY CERTIFICATE, FOR
10:40:50  EXAMPLE, THE BOB'S BURGERS EXAMPLE, THAT
10:40:53  CERTIFICATE COULD SIGN THE WRONG CERTIFICATE
10:40:55  FOR SMLA.COM AND IT WILL BE ACCEPTED.
10:41:00  YOU PROBABLY WON'T BE ABLE TO READ THE CODE
10:41:02  ON THE SLIDE.
10:41:03  BUT IT IS THE OFFICIAL SSL EXAMPLE FOR MAKING
10:41:07  CLIENT CONNECTIONS.
10:41:08  I TOOK IT FROM THE OFFICIAL DOCUMENTATION,
10:41:10  AND THIS IS -- THE EXAMPLE GO TO CONNECT TO A
10:41:14  RANDOM WEBSITE ON 433 AND MAKE A HARD CODED
10:41:20  [INAUDIBLE] REQUEST.
10:41:21  AND THIS IS LIKE NOT USER FRIENDLY.
10:41:24  IT'S NOT JUST A VERBOSE API, IT'S AN
10:41:30  UNOPINIONATED API.
10:41:33  THAT MEANS THAT YOU HAVE TWO [INAUDIBLE]
10:41:35  REMEMBER THE DECISIONS I MENTIONED FROM THE
10:41:38  TLS HANDSHAKE EARLIER.
10:41:34  SETTINGS.
10:41:39  FORCING APPLICATION DEVELOPERS TO MAKE SHE'S
10:41:42  DECISIONS IS BAD.
10:41:43  FIRST OF ALL, IT ALLOWS THEM TO MAKE BAD
10:41:47  DECISIONS.
10:41:49  AND THEN IT PREVENTS APPLICATIONS FROM BEING
10:41:52  MIGRATED EASILY TO BETTER SETTINGS AND THEN
10:41:58  THEY BECOME AVAILABLE.
10:41:59  SO THIS COULD BE SO MUCH BETTER.
10:42:04  NOW, THEY'RE NOT JUST IMPLEMENTATION FLAWS,
10:42:07  SSL AND TLS HAVE A ROCKY HISTORY WITH
10:42:10  BACKWARDS COMPATIBILITY.
10:42:13  THERE HAVE BEEN A TON OF DOWNGRADE ATTACKS
10:42:16  THAT ALLOW ATTACKERS TO PREVENT SECURE
10:42:20  CONNECTIONS FROM BEING ESTABLISHED, WHICH
10:42:22  FURTHER ALLOWS THEM TO TAKE ADVANTAGE OF THE
10:42:24  LESS SECURE SESSIONS THAT THEY HAVE CAUSED.
10:42:28  SO EVEN THOUGH HTTPS IS JUST HTTP ON TLS,
10:42:34  THERE ARE A LOT OF INTERESTING, UNIQUE ATTACK
10:42:38  [INAUDIBLE] HERE.
10:42:39  THERE ARE NOT JUST PROBLEMS WITH THE
10:42:41  AUTHENTICATION OR CRYPTOGRAPHY, RATHER THERE
10:42:44  ARE ATTACKS BASED ON SUBTLE BROWSER BEHAVIOR.
10:42:50  INTERESTING ONE.
10:42:53  SO THE USER CONNECTS TO A SECURE HTTP WEBSITE
10:42:48  SO, FOR EXAMPLE, COOKIE STEALING IS AN
10:42:58  THAT STORES A COOKIE ON THEIR SYSTEM.
10:43:00  SO IS FAR SO GOOD, RIGHT?
10:43:02  THE ATTACKER CANNOT ATTACK THIS ENCRYPTED
10:43:06  GRAPHIC WEBSITE.
10:43:07  BUT THEY WAIT FOR YOU TO SUBMIT AN
10:43:10  UNENCRYPTED HTTP REQUEST TO ANY OTHER
10:43:13  WEBSITE.
10:43:14  THEN THEY STEP IN AND RESPOND WITH A
10:43:17  REDIRECTED DOMAIN BUT API.
10:43:23  BECAUSE ANY SITE CAN ISSUE A REDIRECTION TO
10:43:25  ANY OTHER SITE, YOUR BROWSER HAPPILY FOLLOWS,
10:43:28  AND THIS RESULTS IN A PLAIN TEXT CONNECTION
10:43:30  TO THE ATTACKER WEBSITE WHICH INCLUDES ALL
10:43:33  THE NON-SECURE COOKIES IN YOUR BROWSER'S
10:43:37  POSSESSION.
10:43:37  THIS CAN BE MITIGATED BY SETTING A SECURE
10:43:42  FLAG ON COOKIES.
10:43:43  BUT MANY DEVELOPERS FORGET TO DO THAT.
10:43:47  AND THIS EXEMPLIFIES HOW TRICKY SECURING
10:43:53  HTTPS IS.
10:43:54  IT'S AN EXTREMELY COMPLICATED COMBINATION OF
10:43:57  FACTORS.
10:44:03  THERE IS STILL COOKIE INJECTION.
10:44:04  IT USES A SIMILAR TECHNIQUE, NON-ENCRYPTION
10:43:59  AND EVEN THEN THE COOKIES ARE FLAGGED SECURE,
10:44:09  IN THE MIDDLE CAN RETARGET THE DOMAIN ON AP,
10:44:14  AND THEN SEND A SEND COOKIE HEADER TO
10:44:17  OVERWRITE COOKIES FOR THAT WEBSITE.
10:44:20  SO YOUR SECURE COOKIES AREN'T RESISTANT TO
10:44:23  TAMPERING EITHER.
10:44:25  IN A LOT OF CASES, THE USER CAN BE CONSIDERED
10:44:28  A SECURITY FLAW BECAUSE THEY DO INSECURE
10:44:31  THINGS, RIGHT?
10:44:32  BUT, FOR EXAMPLE, CLICKING THROUGH
10:44:35  CERTIFICATE WARNINGS.
10:44:37  BUT I DON'T THINK IT'S REALLY THE USER'S
10:44:40  FAULT.
10:44:44  WE DON'T PREVENT THEM FROM CONNECTING TO
10:44:46  WEBSITES WITH INVALID CERTIFICATES BECAUSE WE
10:44:47  TRAIN THEM TO CLICK THROUGH WARNINGS BY
10:44:50  HAVING SO MANY OF THEM.
10:44:54  SO MOVING ON TO SOFTWARE THAT ACTUALLY USES
10:44:59  TLS.
10:45:01  LET'S LOOK AT THE EXAMPLE THAT WE HAD IN THE
10:45:03  BEGINNING.
10:45:04  NOW, EVEN THOUGH IT'S SUPPORTED TLS, IT WAS
10:45:08  USED INCORRECTLY AND IS CAUSING HUGE SECURITY
10:45:12  SO IT'S EASY TO BLAME URLLIB2 HERE, BUT I
10:45:18  THINK IF THERE'S A FAILING OF INDUSTRY.
10:45:12  HOLES.
10:45:20  IF EASY OPINIONATED SECURE LESS APIS EXISTED
10:45:27  WE WOULDN'T HAVE HAD THIS PROBLEM.
10:45:29  THIS IS JUST LIKE THE USABILITY PROBLEM WITH
10:45:31  BROWSERS BUT FOR DEVELOPERS INSTEAD.
10:45:35  FORTUNATELY THERE'S THE REQUEST'S LIBRARY.
10:45:39  [INAUDIBLE] SITE HAS A BAD CERTIFICATE, BUT
10:45:42  IT IS SAD THAT URLLIB2, WHICH I THINK EVERY
10:45:46  NEW [INAUDIBLE] GRAMMAR WOULD USE IS HORRIBLY
10:45:50  INSECURE.
10:45:52  EVERYONE IN THE NO USERS REQUESTS, BECAUSE
10:45:55  IT'S SECURE.
10:45:56  BUT ACTUALLY BECAUSE IT'S EASIER TO USE THAN
10:46:01  URLLIB2, BUT IT'S UNSECURE.
10:46:03  WELL, I'M SORRY THAT I'M BEING SO NEGATIVE
10:46:09  ABOUT ALL THESE FLAWS AND ATTACKS, BUT IT'S
10:46:13  TRUE, THINGS ARE GETTING BETTER.
10:46:15  PEOPLE ARE BEGINNING TO CARE.
10:46:19  OPEN SSL IS GETTING MORE ATTENTION.
10:46:21  SO NEW ALTERNATIVES ARE SHOWING UP, WHICH
10:46:24  MEANS THAT THERE'S HOPE.
10:46:25  BUT THINGS COULD STILL BE BETTER.
10:46:28  MOST OF THESE LIBRARIES ARE STILL [INAUDIBLE]
10:46:34  THERE'S A PROBLEM BY CS CRYPTOGRAPHY WHICH IS
10:46:38  A PROJECT THAT AIMS TO HAVE OPINIONATED APIS
10:46:31  IN MEMORY AND SAFE LANGUAGES.
10:46:41  WHILE STILL EXPOSING LOW LEVEL PRIMITIVES
10:46:45  REQUIRED.
10:46:45  SO THIS HIDES THE COMPLEXITY AND AT THE SAME
10:46:49  TIME EXPOSES IT TO THE ONES WHO ACTUALLY WANT
10:46:51  TO SEE IT.
10:46:52  THERE'S TLS -- BY THE WAY, YOU CAN ACCESS
10:46:56  THESE ON GET HUBS GOT COME/CRYPTOGRAPHY.
10:47:03  THERE'S PYCA TLS WHICH IS AN EASY TO USE THAT
10:47:09  I LOGGED ON FOR A WHILE DURING THE OPEN
10:47:11  SOURCE RETREAT LAST YEAR.
10:47:18  I HAVEN'T HAD THE TIME TO WORK ON IT FURTHER
10:47:20  BUT IF ANY OF YOU OUT HERE ARE INTERESTED,
10:47:22  PLEASE, PLEASE CONTRIBUTE, AND I'LL MAKE SURE
10:47:24  THAT I MAKE [INAUDIBLE] THAT YOUR
10:47:26  CONTRIBUTIONS DON'T GO TO WASTE.
10:47:29  SO MY FAVORITE PART OF THE TALK.
10:47:31  WHAT CAN WE DO?
10:47:32  THERE'S A [INAUDIBLE] CALLED SSL TEST ON SSL
10:47:36  LABS.COM.
10:47:38  YOU CAN USE THAT.
10:47:38  IT'S REALLY GOOD.
10:47:39  SO HYNEK HAS A PAGE ON CLS.
10:47:54  DEFINITELY CHECK IT OUT.
10:47:55  YOU CAN ALSO TEST YOUR CLIENTS AGAINST
10:47:52  IT'S FREQUENTLY UPDATED SO YOU SHOULD
10:47:58  SERVERS WITH BAD CERTIFICATES TO MAKE SURE
10:48:00  THAT EVERYTHING IS FINE.
10:48:01  BUT SO HERE I WAS LOOKING FOR A KNOWLEDGE
10:48:05  BASE OF SORTS, WHERE YOU COULD JUST HAVE A
10:48:08  LIST OF ALL THE SERVERS WITH BAD CERTIFICATES
10:48:11  AND ANYONE WHO WANTED TO TEST THEIR CLIENTS
10:48:13  COULD CHECK AGAIN AGAINST IT.
10:48:15  I DIDN'T FIND IT.
10:48:16  AND I'VE BEEN TALKING TO IAN WHO WORKS ON
10:48:21  REQUESTS AND MAINTAINS A LOT OF AWESOME
10:48:23  LIBRARIES.
10:48:24  BUT IF YOU'RE TRYING TO WORK ON MAKING THIS
10:48:26  HAPPEN, IF YOU KNOW OF SOMETHING GOOD, LET ME
10:48:27  KNOW.
10:48:31  THERE ARE ALSO EXCELLENT BOOKS.
10:48:33  I'VE USED A LOT OF CONTENT AND DIAGRAMS FROM
10:48:35  THESE.
10:48:36  BULLETPROOF SSL AND TLS WILL GIVE YOU A LOT
10:48:40  OF CONTEXT ABOUT TLS THAT YOU NEED TO KNOW
10:48:43  FOR TLS TO BE RIGHT.
10:48:46  THERE'S THE-TANGLED-WEB, WHICH IS A REALLY
10:48:49  GOOD BOOK ABOUT WHAT'S WRONG WITH THE
10:48:58  MAKE IT BETTER.
10:48:58  THERE'S LVH WHO IS GIVING TWO TALKS TODAY.
10:48:51  INTERNET AND HOW IT HOPEFULLY HOW YOU CAN
10:49:03  HE HAS WRITTEN A BOOK CALLED CRYPTO 101 WHICH
10:49:07  IS AN EXCELLENT BOOK FOR CRYPTOGRAPHY FOR
10:49:11  DEVELOPERS WHO DON'T KNOW ANYTHING ABOUT IT.
10:49:13  SO I SUGGEST STARTING THERE.
10:49:14  SO I KNOW IT LOOKS SCARY.
10:49:16  I WOULD SAY BE BRAVE.
10:49:17  DON'T BE AFRAID TO LEARN.
10:49:19  HELP US OUT AT THE CRYPTOGRAPHY PROJECT.
10:49:22  WE'RE ALL [INAUDIBLE] PEOPLE.
10:49:23  SO HOP ON TO TLS, GO TO THIS CHANNEL AND TALK
10:49:27  TO US.
10:49:29  THANK YOU.
10:49:29  ANY QUESTIONS?
10:49:42  >>  SO WE HAVE A FEW MINUTES FOR QUESTIONS.
10:49:43  SO IF YOU'VE GOT ONE, PLEASE STEP FORWARD.
10:49:59  >>  AUDIENCE:  WHY IS IT BAD TO TRUST AN
10:50:00  EXPIRED CERTIFICATE.
10:50:01  >> I'M SORRY.
10:50:02  CAN YOU REPEAT?
10:50:03  >> AUDIENCE:  WHY IS IT BAD TO TRUST AN
10:50:05  EXPIRED CERTIFICATE?
10:50:06  LIKE WHY CAN'T YOU TRUST A CERTIFICATE THAT'S
10:50:09  >>  BECAUSE THE CERTIFICATE IS APPROVED.
10:50:11  THE SITE WAS ACTUALLY OWN THE BY THE PERSON
10:50:08  EXPIRED?
10:50:14  WHO WAS SUPPOSED TO SERVE IT.
10:50:17  AND AN EXPIRED CERTIFICATE MEANS THAT WHAT IF
10:50:19  THE OWNERSHIP CHANGED.
10:50:21  IT'S JUST NOT SAYING THE SAME THING ANYMORE.
10:50:23  SO THANK YOU FOR YOUR QUESTION.
10:50:32  >>  AUDIENCE:  I GUESS NOT REALLY A QUESTION
10:50:34  BUT ANOTHER ALTERNATIVE TLS AND SSL LIBRARY
10:50:39  IS LIBERATE SSL STARTED BY THE OPEN BSD GUYS.
10:50:45  THAT ONE IS ALSO REALLY PRETTY GOOD, AND
10:50:47  THEY'RE TAKING THEIR OWN PHONETICAL LOOK AT
10:50:50  THEIR CODE BASE AND TAKING IT TO SSL.
10:50:54  SO THAT'S A VERY GOOD PROGRESS.
10:50:56  >>  THANK YOU.
10:51:03  DO WE HAVE MORE TIME FOR MORE QUESTIONS?
10:51:23  ALL RIGHT THEN.
10:51:24  I GUESS THAT'S THAT.
10:51:25  THANK YOU.
10:51:27  [ APPLAUSE ]




