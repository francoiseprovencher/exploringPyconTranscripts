                041115517CDKOZAR
02:14:57PM      >> HI, EVERYONE.
02:14:59PM      ALL RIGHT.
02:15:00PM      SO I'M GOING TO BE INTRODUCING YOU TO WHO IS GOING
02:15:05PM      TO BE GIVING YOU A TALK ON PACKING AND DEPLOYMENT.
02:15:12PM      SO LET'S GIVE A WARM WELCOME.
02:15:14PM      [APPLAUSE]
02:15:19PM      >> ALL RIGHT.
02:15:20PM      SO HI, EVERYONE.
02:15:21PM      I HOPE YOU'RE ENJOYING PYTHON.
02:15:25PM      I'M DOMEN KOZAR.
02:15:26PM      I DO THIS THING FOR ALMOST TEN YEARS.
02:15:28PM      I COME FROM 2 MILLION PEOPLE COUNTRY IN EUROPE.
02:15:34PM      AND I JUST STARTED, YOU KNOW, WORKING ON PACKAGING
02:15:39PM      BACK, IT WAS PART OF GOOGLE SUMMER OF CODE.
02:15:43PM      I WAS PART OF G MINUS PIP PROJECT.
02:15:48PM      IF ANYONE KNOWS TO ULTIMATE PROJECT OF PYTHON
02:15:51PM      PACKAGES.
02:15:53PM      ANYHOW, I'M GOING TO TALK ABOUT WAY OF LEARNING
02:15:56PM      THAT FIVE YEARS, AND HOW FAR WE HAVE COME.
02:16:00PM      SO JUST, THERE ARE LIKE THREE AREAS IN PYTHON
02:16:03PM      PACKAGING THAT ARE KIND OF INTERESTING TO ME TO
02:16:05PM      FOLLOW.
02:16:06PM      AND ONE IS --
02:16:11PM      AND THE INFRASTRUCTURE, MOSTLY THE PIPING.
02:16:14PM      AND YOU KNOW PYTHON PACKAGING IS HARD.
02:16:17PM      DONE AN AWESOME JOB KEEPING THAT IN PROGRESS, AND
02:16:20PM      IMPROVING THAT.
02:16:22PM      AND THERE IS A PACKAGING AT PYTHON.ORG.
02:16:26PM      WHO KNOWS ABOUT PYTHONPACKAGING.ORG?
02:16:30PM      IT'S IMPLEMENTATION FOR PACKAGING THESE DAYS, AND
02:16:34PM      BEST PRACTICES.
02:16:35PM      HOW TO APPROACH THAT.
02:16:37PM      EVEN IF YOU'RE DOING THIS EVERY DAY, YOU SHOULD GO
02:16:39PM      OVER THERE AND CHECKOUT WHAT'S NEW AND HOW YOU
02:16:41PM      SHOULD BE DOING IT.
02:16:43PM      A LITTLE BIT INTERESTING PART IS THAT PYTHON IS, AS
02:16:47PM      FAR AS I KNOW, THE ONLY LANGUAGE THAT HAS -- YOU
02:16:49PM      HAVE TO RUN A SCRIPT THAT ACTUALLY KNOWS SOMETHING
02:16:53PM      ABOUT THE PACKAGING.
02:16:55PM      AND THIS IS REALLY, REALLY A BIG PROBLEM.
02:16:56PM      AND THERE IS ACTUALLY A PIP THAT'S IN A DRAFT MODE
02:17:00PM      THAT'S TRYING TO ADDRESS THAT.
02:17:02PM      BUT THERE ARE A LOT OF THINGS TRYING TO DO BEFORE
02:17:05PM      ADDRESS THAT AND IMPLEMENTING AND START USING AND
02:17:08PM      MIGRATE TO THE STATIC META DATA.
02:17:11PM      THIS IS THE THIRD AREA, WHICH IS THE MOST
02:17:14PM      INTERESTING TO ME, WE'RE IN 2015.
02:17:16PM      AND WE DON'T JUST USE PYTHON ANYMORE.
02:17:19PM      WE USE AT LEAST, IF YOU'RE DOING WEB JAVA SCRIPT --
02:17:27PM      THIS IS LIKE UNKNOWN AREA.
02:17:29PM      HOW DO WE PACKAGE THOSE THINGS TOGETHER?
02:17:31PM      AND JUST, YOU KNOW, TO GIVE YOU FOOD FOR THOUGHT,
02:17:34PM      WHAT'S -- WHAT'S BIG PROBLEM THAT WE HAVE WITH
02:17:37PM      PACKAGING THESE DAYS?
02:17:38PM      IF YOU THINK ABOUT ANY BUILD SYSTEM, EVEN PYTHON'S,
02:17:41PM      AS A FUNCTION, YOU KNOW, WE HAVE TWO INPUTS.
02:17:44PM      ONE IS THE META DATA AND INSTRUCTION TO PACKAGE,
02:17:47PM      BUT THE OTHER ONE IS OUR FALL SYSTEM.
02:17:52PM      BUILD SYSTEM GOES INTO THE FILE SYSTEM.
02:17:57PM      THAT CIRCLES AROUND TO EVERY PACKAGE.
02:18:00PM      THAT'S KIND OF STAGE THAT WE MODIFY.
02:18:01PM      PACKAGES ARE INSTALLED IN THE USER, BUT, YOU KNOW,
02:18:05PM      IT'S GOING TO BE/USER OR/USER LOCAL.
02:18:09PM      NOT USING ONE PACKAGE LOCAL, AND TO HAVE NO ONE HAS
02:18:15PM      ANY IDEA WHAT'S THE ACTUAL STATE THERE, RIGHT?
02:18:18PM      IT'S JUST, YOU TAKE THAT WHOLE BLOB AND YOU TEST IT
02:18:20PM      AND YOU HOPE IT WORKS.
02:18:22PM      SO I'M GOING TO TALK ABOUT THE NEXT PACKAGE
02:18:26PM      MANAGER, AND HOW IT TRIES TO APPROACH, AND SO THAT
02:18:30PM      -- AND SOLVE THAT PROBLEM.
02:18:31PM      THIS IS THE RUN TIME GRAPH OF PYTHON.
02:18:34PM      A FEW INTERESTING POINTS HERE.
02:18:36PM      YOU SEE THAT -- WELL, IT'S -- WELL, SO PYTHON IS AT
02:18:40PM      THE BOTTOM, AND YOU SEE IT DEPENDS ON OPEN SSL, IF
02:18:43PM      YOU WANTED TO SSL.
02:18:44PM      AND OPEN SSL ACTUALLY TIME DEPENDS ON PERL IF THERE
02:18:49PM      ARE A FEW SCRIPT.
02:18:54PM      ACTUALLY HAVE PERL AS RUN TIME.
02:18:57PM      OPEN SSL DOES HAVE PERL.
02:19:02PM      AND, YOU KNOW, THIS IS -- THIS IS THE GRAPH THAT WE
02:19:06PM      HAVE IN NIX IF I INSTALL THE -- THE WHICH IT LOOKS
02:19:13PM      IN NIX IS THIS.
02:19:15PM      EVERY PACKAGE IS PREFIXED WITH THE LONG HASH AND
02:19:22PM      NAME AND VERSION.
02:19:23PM      THIS IS THE WHOLE RUN TIME.
02:19:25PM      SO ACTUALLY, THAT -- THE -- I -- INSTEAD OF HAVING
02:19:31PM      SLASH USER, WE HAVE A LONG PATH.
02:19:33PM      AND INSIDE, THERE YOU WOULD SEE EVERYTHING YOU
02:19:35PM      WOULD NORMALLY FIND.
02:19:36PM      SO YOU KNOW, IT WILL EVEN INCLUDE --
02:19:41PM      [NO AUDIO]
02:19:45PM      ABSOLUTE PATH.
02:19:47PM      [NO AUDIO]
02:19:53PM      THE SPECIFIC LIBRARIES AND AS LONG AS YOU DON'T
02:19:56PM      REMOVE THEM, THIS PYTHON WILL WORK.
02:19:59PM      EVEN IF YOU FIDDLE WITH YOUR SYSTEM IN ANY WAY.
02:20:02PM      SO, ALL RIGHT.
02:20:02PM      SO NOW WE HAVE PACKAGES.
02:20:05PM      HOW DO WE MAKE AN ACTUAL ENVIRONMENT?
02:20:07PM      HOW DO WE GET A WORKING, YOU KNOW FILE SYSTEM
02:20:10PM      STRUCTURE?
02:20:11PM      AND USER ENVIRONMENT AND STRUCTURE COMES INTO MIX.
02:20:15PM      AND YOU KNOW THE PACKAGE POINT TO EACH OTHER,
02:20:21PM      DYNAMIC THINKER AND OTHER WAYS.
02:20:23PM      AND WE HAVE THIS IDEA CALLED USER ENVIRONMENT,
02:20:26PM      WHICH IS ACTUALLY SOMETHING WHERE YOU INSTALL
02:20:28PM      PACKAGES INSIDE.
02:20:30PM      [NO AUDIO]
02:20:39PM      IF YOU INSTALL PYTHON, FOR EXAMPLE.
02:20:41PM      AND BECAUSE WE HAVE ALL THIS, BECAUSE WE HAVE THIS
02:20:44PM      NICE FRAMEWORK, WE CAN ACTUALLY CREATE PROFILES AND
02:20:48PM      THOSE PROFILES ARE BASICALLY A LIFE CYCLE OF YOUR
02:20:51PM      PACKAGE MANAGER.
02:20:52PM      SO EVERY OPERATION YOU DO INSTALL A PACKAGE, REMOVE
02:20:55PM      IT, UPGRADE IT, WE WILL CREATE A SIMILAR --
02:20:59PM      THAT MAKES FOR EVERY OPERATION, THAT MAKES SURE
02:21:02PM      THAT WE CAN ROLLBACK TO ANY PREVIOUS VERSION IN
02:21:05PM      YOUR HISTORY OF, YOU KNOW, OF OPERATIONS ON THE
02:21:08PM      PACKAGE MANAGER.
02:21:09PM      AND THOSE PROFILES CAN BE -- BY DEFAULT, INSTALLED
02:21:14PM      FOR EVERY USER, AND THERE IS A SYSTEM PROFILE, BUT
02:21:17PM      YOU CAN MAKE THOSE PROFILES, YOU KNOW, FOR A
02:21:19PM      PROJECT OR SOMETHING LIKE THAT.
02:21:21PM      SO IN EVERY PROFILE HAS ITS OWN CYCLE, WHAT'S
02:21:24PM      INSTALLED AND HOW IT UPGRADES.
02:21:26PM      WHEN DO YOU UPGRADE THOSE PACKAGES?
02:21:34PM      SO NIXOS IS A PACKAGE MANAGER, AND A LANGUAGE.
02:21:42PM      IT'S ESSENTIALLY A BUNCH OF FUNCTIONS AND DATA
02:21:46PM      TYPES.
02:21:46PM      THE ONLY -- IT'S VERY SIMILAR TO PYTHON, BIG
02:21:49PM      DIFFERENCE IS -- EVALUATED, AND GIVES IT MOST POWER
02:21:54PM      FOR CONFIGURATION MANAGEMENT.
02:21:57PM      THOSE PACKAGES ARE OUTPUT, WHEN WE BUILD PACKAGE,
02:22:02PM      ARE IMMUTABLE.
02:22:04PM      WHEN YOU MODIFY, A NEW FOLDER WILL BE CREATED WITH
02:22:08PM      THAT HASH.
02:22:09PM      I WILL EXPLAIN LATER WHAT THAT MEANT.
02:22:11PM      THAT ALLOWS US, WE CAN ROLLBACK AND WE CAN, YOU
02:22:14PM      KNOW, DELETE SOFTWARE OR MODIFY.
02:22:16PM      JUST CREATE NEW VERSIONS AND SEND LINK INSIDE OUR
02:22:21PM      ENVIRONMENT.
02:22:22PM      SO SOURCE IS FOR HAVING ALL THE FREEDOM TO MODIFY
02:22:28PM      YOUR SYSTEM AND BINARY IS FOR THOSE WHO HAVE TIME
02:22:31PM      CONSTRAINTS, WHICH WE ALL DO.
02:22:33PM      AND THE NICE THING IS, IT'S CROSS-PLATFORM.
02:22:38PM      IT SUPPORTS BOTH.
02:22:39PM      SO WE HAVE HUGE -- IN THE COMMUNITY, X USERS GROUP,
02:22:45PM      AND THERE'S ACTUALLY NOW, JUST ONE COMPANY CALLED
02:22:48PM      ROAD CODER USING, AND YOU KNOW, IT WORKS.
02:22:54PM      SO HOW DOES THIS SPEC LOOK LIKE.
02:23:00PM      THERE'S ONE FUNCTION, YOU PASS A BUNCH OF VALUES TO
02:23:04PM      IT, AND THERE ISN'T ONE OF THE VALUE -- ONE OF THE
02:23:08PM      ARGUMENTS IS BUILDER, THAT'S THE SCRIPT IT WILL
02:23:10PM      EXECUTE, AND THAT SCRIPT WILL BE EXECUTED IN
02:23:12PM      ISOLATED ENVIRONMENT.
02:23:13PM      IT'S GOING TO BE IN THE CHANGE ROOT ENVIRONMENT,
02:23:15PM      WITHOUT ANY NETWORKING, AND A BUNCH OF OTHER THINGS
02:23:18PM      TO MAKE SURE THAT THIS BUILD WILL NOT INTERFERE
02:23:23PM      WITH YOUR SYSTEM AND PICK ANYTHING UP.
02:23:25PM      AND THE BUILDER IS, IN OUR CASE, IT'S ALL THE TIME
02:23:28PM      BASH, BUT IT COULD BE PRETTY MUCH ANYTHING THAT CAN
02:23:31PM      BE SUITED AND PAST ARGUMENTS.
02:23:35PM      AND THAT BUILDER WILL GET ALL THE ARGUMENTS THAT
02:23:37PM      ARE IN THE DURATION.
02:23:38PM      AND THEN YOU CAN WRITE YOUR SCRIPT TO BUILD
02:23:40PM      SOFTWARE.
02:23:44PM      AND ACTUALLY, THE HASH THAT YOU SAW BEFORE, THAT IS
02:23:47PM      THE HASH OF ALL THE INPUTS TO THE -- FUNCTION.
02:23:52PM      AND THAT WAY WE CAN ACTUALLY BE SURE THAT WE HASH
02:23:56PM      ALL THE META DATA WE HAVE FOR THE PACKAGE.
02:24:01PM      INCLUDING THE DEPENDENCY DATA.
02:24:03PM      THAT THAT HASH UNIQUELY IDENTIFIES THE PACKAGE
02:24:06PM      ACCORDING TO THE SOURCE.
02:24:07PM      SO BECAUSE IT'S, YOU KNOW, YOU DON'T WANT TO REPEAT
02:24:11PM      ALL THOSE ARGUMENTS ALL THE TIME, WE HAVE THIS
02:24:13PM      THING CALLED STANDARD ENVIRONMENT WHICH IS
02:24:15PM      DIFFERENT FOR EVERY PLATFORM.
02:24:18PM      IN LINUX YOU WILL GET TRLS AND SO ON.
02:24:22PM      THIS IS FOR EXAMPLE, HOW YOU WOULD PACKAGE.
02:24:25PM      ENGINE X.
02:24:26PM      A BUNCH OF SIMPLE KEY VALUES AND YOU KNOW, BUILD
02:24:30PM      INPUTS IS THE MOST INTERESTING PART.
02:24:34PM      BUILDS ON DEPENDENCIES.
02:24:36PM      AND THE WAY THAT WE FIND RUN TIME DEPENDENCIES IS A
02:24:39PM      BIT TRICKY.
02:24:40PM      IT SOUNDS REALLY, YOU KNOW, MAGIC, BUT IT WORKS.
02:24:43PM      AND WE ACTUALLY SCAN ALL THE PACKAGES FOR THOSE
02:24:47PM      HASHES.
02:24:48PM      AND IF -- IF THE PACKAGE -- IF THAT SCAN SUCCEEDS,
02:24:52PM      THAT IS THE RUN TIME DEPENDENCY.
02:24:54PM      AND IF IT'S NOT IN THE PACKAGE, WE'LL SKIP IT AND
02:24:57PM      IT'S NOT GOING TO BE PART OF THAT.
02:24:59PM      SO, ALL RIGHT.
02:25:00PM      SO PYTHON.
02:25:03PM      WE HAVE A FUNCTION CALLED BUILD PYTHON PACKAGE,
02:25:06PM      WHICH IS LIKE A 200-LINE SCRIPT.
02:25:11PM      THAT TAKES -- THAT'S BASICALLY, INSTEAD OF USING A
02:25:16PM      BUILD SYSTEM IT WILL USE PYTHON SET UP TOOLS,
02:25:19PM      THAT'S WHAT YOU WANT TO DO.
02:25:21PM      IF YOU WANT TO PACKAGE, FILO, USE LIBRARIES THAT
02:25:25PM      PILLAR USES AND THAT'S YOUR PYTHON PACKAGE.
02:25:27PM      AT THE TOP THERE IS ONE FUNCTION THAT ACCEPTS ALL
02:25:30PM      THE DEPENDENCIES, AND ALL THE FUNCTIONS THAT PEOPLE
02:25:33PM      USE.
02:25:33PM      AND AT THE BOTTOM, THIS IS THE DURATION FUNCTION,
02:25:39PM      UNDERNEATH THAT WILL ACTUALLY BUILD AND CREATE.
02:25:43PM      SO IF YOU TO WANT BUILD PYTHON, FOR EXAMPLE, YOU
02:25:47PM      SAY, NEXT BUILD PYTHON, YOU GET A PYTHON BACK, AND
02:25:51PM      IT WILL CREATE THIS SIMILAR LINK IN YOUR CURRENT
02:25:55PM      DIRECTORY RESULT -- CALLED RESULT FOR CONVENIENCE.
02:25:58PM      IF YOU RUN RESULT IN PYTHON, YOU GET A PYTHON
02:26:01PM      INTERPRETER.
02:26:01PM      YOU SEE THE TIME STAMP IS LIKE UNIX PLUS ONE
02:26:06PM      SECOND.
02:26:06PM      WE'RE TRYING TO ACHIEVE THE BINARY ALSO AND ONE
02:26:12PM      THING WE HAVE TO DO IS FIX TIME.
02:26:14PM      AND YOU KNOW EXACTLY WHAT IS THE RUN TIME,
02:26:17PM      DEPENDENCY GRAPH OF PYTHON, WE HAVE A NAME FOR
02:26:21PM      THAT, IT'S CALLED CLOSURE.
02:26:22PM      AND THE RESULT -- TMUX COPY -- TMUX COPY CLOSURE
02:26:28PM      DEMAND.
02:26:29PM      SO IT'S LIKE A VERY DUMMY WAY TO DEPLOY NIX
02:26:35PM      SOFTWARE.
02:26:36PM      AND IF YOU LOOK AT THIS, AND YOU GIVE IT TO OPS
02:26:40PM      PEOPLE, IT'S LIKE JAVA.
02:26:41PM      IT'S LIKE I HAVE THIS JAR, WHICH I COPY AND I PASS
02:26:44PM      LIKE A THOUSAND PARAMETERS, AND, YOU KNOW, IT
02:26:46PM      WORKS.
02:26:47PM      AND THEY'RE HAPPY BECAUSE IT'S SIMPLE.
02:26:52PM      SO ALL RIGHT.
02:26:53PM      SO NOW WE KNOW HOW TO BUILD...
02:27:00PM      SO ONE REALLY NICE WAY IS TO THINK ABOUT THIS, IS
02:27:03PM      INSTEAD OF ACTUALLY BUILDING, FOR EXAMPLE, PYTHON,
02:27:05PM      IF YOU WANT TO DEVELOP IT, WHAT WE REALLY WANT TO
02:27:08PM      DO IS ENTER THIS BUILD ENVIRONMENT ON THE RIGHT
02:27:10PM      THAT YOU SEE.
02:27:11PM      AND THIS HAS ALL THE TAR BALLS AND EVERYTHING
02:27:13PM      NEEDED TO BUILD PYTHON.
02:27:15PM      SO IF WE ENTER THIS ENVIRONMENT, IT WILL HAVE
02:27:17PM      EVERYTHING WE NEED TO BUILD PYTHON AND WE CAN
02:27:19PM      ACTUALLY DEVELOP IT.
02:27:20PM      SO THIS IS NIX-SHELL.
02:27:22PM      THINK ABOUT IT AS VIRTUAL ENVIRONMENT FOR ALL
02:27:25PM      SOFTWARE THAT YOU HAVE ON YOUR SYSTEM.
02:27:27PM      SO, YOU KNOW, IT CAN CREATE ON THE FLY, SHELLS WITH
02:27:31PM      SOFTWARE, SO YOU CAN SAY, GIVE ME DATA IN A BUNCH
02:27:34PM      OF LIBRARIES AND YOU CAN COMPILE...
02:27:38PM      [NO AUDIO]
02:27:46PM      INSTALLED NIX ON THERE, AND YOU KNOW IT GAVE ME A
02:27:50PM      SHELL WITH PYTHON TREE AND I DIDN'T CARE THAT I'M
02:27:53PM      USING -- THERE IS A FLAKE CALLED PURE AND THAT
02:27:58PM      FLAKE MAKE SURE IT DOESN'T INHERENT YOUR CURRENT
02:28:04PM      BASH.
02:28:06PM      [NO AUDIO]
02:28:11PM      MAKE SURE THAT THEY WORK WITH A SET OF TOOLS THAT
02:28:13PM      YOU DEFINE.
02:28:14PM      AND OTHERWISE, YOU KNOW, THE SCRIPT WILL BREAK.
02:28:20PM      BECAUSE WE'RE USING A LAZY LANGUAGE, WE HAVE -- A
02:28:25PM      LOT OF POWER TO CONFIGURE IT AS A USER.
02:28:28PM      AND AS A, YOU KNOW, DISTRIBUTION OR SOMEONE THAT
02:28:31PM      ACTUALLY DOES THE PACKAGING.
02:28:33PM      AND YOU CAN OVERWRITE PRETTY MUCH EVERYTHING.
02:28:36PM      TWO THINGS TO OVERWRITE.
02:28:38PM      THERE WAS A TOP LEVEL FUNCTION DEPENDANCIES.
02:28:41PM      AT THE TOP, GIVE ME PYTHON IN NEWER VERSION OF OPEN
02:28:44PM      SSL, AND YOU GET THAT, YOU KNOW, VALUE BACK.
02:28:47PM      AND THEN YOU HAVE, YOU KNOW, TWO VERSIONS OF PYTHON
02:28:50PM      USING OPEN SSL.
02:28:51PM      AND THEN THERE IS A WAY TO GLOBALLY OVERRIDE FOR
02:28:54PM      ALL THE PYTHONS ON YOUR -- YOU KNOW, FOR THE GLOBAL
02:28:58PM      PYTHON THAT OTHER PACKAGES USE.
02:29:00PM      AND THAT'S, YOU KNOW, A BIT OF A DIFFERENT
02:29:03PM      FUNCTION, BUT IT LOOKS PRETTY SIMILAR.
02:29:05PM      AND AT THE BOTTOM, YOU SEE ACTUALLY TO OVERRIDE THE
02:29:08PM      DURATION PARAMETERS.
02:29:09PM      SO IN THIS CASE, I GET A PYTHON THAT POINTS THE
02:29:12PM      SOURCE, NOT TO TAR BALL, BUT TO MY LOCAL CHECKOUT
02:29:16PM      OF PYTHON.
02:29:17PM      SO I COULD USE THAT AND THEN DEVELOP PYTHON AND GO
02:29:19PM      -- AND ENTER A NIX-SHELL INTO THIS EXPRESSION.
02:29:24PM      SO IN NIX WE HAVE --
02:29:29PM      [NO AUDIO]
02:29:34PM      AND BUILD PYTHON PACKAGES IS THE SET OF TOOL
02:29:37PM      SUPPORT, AND YOU KNOW, THE WAY THAT YOU BUILD, FOR
02:29:40PM      EXAMPLE, A PYRAMID FOR PYTHON 3, 4 --
02:29:47PM      AND BUILD PYTHON 3, 4 PACKAGES AND PYRAMID.
02:29:54PM      AND THERE ARE ALSO TOOLS TO AUTOMATICALLY GENERATE
02:29:59PM      PYTHON PACKAGES OUT OF PYTHON, YOU KNOW, SET OF
02:30:05PM      PYFILES AND THIS IS REALLY HARD AND I'M GOING TO
02:30:07PM      TALK ABOUT THIS A BIT LATER.
02:30:10PM      SO NIX DISTRIBUTION.
02:30:16PM      AND THINK ABOUT WHAT A DISTRIBUTION IS, YOU KNOW,
02:30:18PM      IT'S LIKE LINUX KERNEL, PROCESSER, ID 1, AND YOU
02:30:24PM      KNOW, A BUNCH OF --
02:30:27PM      [AUDIO CUTTING IN AND OUT]
02:30:31PM      SOFTWARE PACKAGE, RIGHT?
02:30:33PM      IT'S JUST ONE FILE.
02:30:34PM      ONLY DIFFERENCE IS, YOU KNOW, YOU AS A USER WOULD
02:30:36PM      INPUT THAT FILE, AND THE PACKAGES ARE DONE BY, YOU
02:30:41PM      KNOW, DISTRIBUTION GUYS.
02:30:43PM      BUT IN NIX IT DOESN'T MATTER BECAUSE WE'RE USING
02:30:47PM      THE SAME LANGUAGE AND TOOL.
02:30:48PM      SO IN NIX, DECLARATIVELY FINE YOUR SYSTEM IN ONE
02:30:53PM      FILE AND SAY "ACTIVATE" AND IT GIVES YOU A SYSTEM
02:30:57PM      WHICH, JUST AS YOU CONFIGURED IT.
02:30:59PM      AND HERE I ENABLED THE FIREWALL.
02:31:05PM      WHAT'S MY FILE SYSTEM?
02:31:06PM      YOU KNOW, WHAT PACKAGES TO INSTALL, AND AT THE
02:31:10PM      BOTTOM I DEFINE A SYSTEM PROCESS USING PYRAMID.
02:31:15PM      AND IT WILL START PYRAMID AND SERVE THAT.
02:31:18PM      AND THIS IS JUST, AGAIN, ANOTHER LOOK AT HOW TO
02:31:25PM      PACKAGE, YOU KNOW, MAKEUP LINUX DISTRIBUTION.
02:31:29PM      AND ON THE LEFT AND RIGHT SIDE YOU'LL SEE THERE'S
02:31:32PM      APACHE AND THIS IS, BASICALLY, WHAT HAPPENS BETWEEN
02:31:35PM      TWO DIFFERENT VERSIONS OF -- WHEN I HAVE -- SO THE
02:31:41PM      FIRST TIME I ACTIVATE NIXOS AND THAT'S AT THE
02:31:46PM      BOTTOM, YOU KNOW, ALL THE DEPENDENCY GRAPH, THAT'S
02:31:48PM      THE CLOSURE OF THE OPERATING SYSTEM.
02:31:50PM      AND THEN I MODIFY APACHE AND I GET THE SAME THINGS,
02:31:54PM      EXCEPT, A NEW APACHE SERVICE.
02:31:57PM      SO, YOU KNOW, IF IF -- FOR EXAMPLE, I UPGRADE TO
02:32:03PM      APACHE PACKAGE.
02:32:06PM      SO ALSO HAVE NIXOPS.
02:32:09PM      THAT'S A WAY TO DEPLOY TO DIFFERENT CLOUD
02:32:12PM      PROVIDERS.
02:32:13PM      SO YOU WOULD TAKE A PREVIOUS XIOS CONFIG AND WRITE
02:32:18PM      A SMALL SNIPPET OF WHAT...
02:32:22PM      [AUDIO CUTTING IN AND OUT]
02:32:25PM      VIRTUAL BOX FOR YOU, AND, YOU KNOW, PUT YOUR SYSTEM
02:32:28PM      IN A STATE, AS YOU DESCRIBED IT IN THAT FILE.
02:32:33PM      BECAUSE WE WANT, YOU KNOW, TO MOVE FAST, AND NOT
02:32:36PM      HAVE A PAINFUL LONG PROCESS, WE HAVE HIDRA WHICH
02:32:43PM      BUILD ALL THE BINARIES AND LOTS OF TESTS BEFORE WE
02:32:48PM      SAY NIX WORKS.
02:32:50PM      THIS IS THE HISTORY OF PACKAGE, OF TESTS
02:32:53PM      SUCCEEDING, AND YOU SEE SOMEONE BROKE PRINTING SPEC
02:32:57PM      BACK THERE.
02:32:58PM      AND THAT MEANS THE BINARY PACKAGES WON'T UPDATE AND
02:33:01PM      YOU WOULDN'T GET A NIXOS UPDATE UNTIL ALL THE TESTS
02:33:05PM      PASS.
02:33:06PM      SO WE'VE BEEN DOUBLING REQUESTS EVERY YEAR.
02:33:13PM      WE'RE AT ABOUT 400 REQUESTS A MONTH.
02:33:18PM      A LITTLE MORE THAN TEN PER DAY.
02:33:20PM      WHICH IS A LOT.
02:33:21PM      TWO MINIMUMS.
02:33:23PM      DECEMBER.
02:33:25PM      SECOND ONE IS JULY, AND THE AUGUST IS THEN, WAY UP,
02:33:29PM      BECAUSE WE HAD A SPRING.
02:33:33PM      SO, YOU KNOW, WHAT'S NEXT?
02:33:36PM      WHERE DO WE GO FROM HERE?
02:33:37PM      YOU KNOW, THE MOST IMPORTANT THING IS FOR PEOPLE TO
02:33:39PM      START USING IT AND GIVE FEEDBACK.
02:33:42PM      THE INFRASTRUCTURE IS THERE.
02:33:44PM      WE HAVE TO IMPROVE THE DOCS.
02:33:46PM      WE'RE AWARE OF THAT.
02:33:47PM      BUT YOU KNOW, IT'S A -- IT'S AN ONGOING PROCESS AND
02:33:50PM      WE NEED FEEDBACK AND YOU KNOW, SO THAT WE KNOW WHAT
02:33:54PM      TO FIX, EXACTLY.
02:33:56PM      YOU KNOW, WE ALSO WANT TO USE -- WE ALSO, AS
02:33:58PM      INTERNAL, WE ARE USING X, STILL, BUT THOSE ARE
02:34:02PM      STILL LIKE NICE THINGS TO HAVE.
02:34:04PM      WE DON'T REALLY BENEFIT.
02:34:06PM      AND YOU KNOW, PYPI 3 SOMETHING IS SOMETHING WE
02:34:09PM      COULD PACKAGE.
02:34:10PM      SO IF YOU LOOK AT -- ANOTHER THING TO IMPROVE, IF
02:34:17PM      YOU LOOK AT THE DEPENDENCY GRAPH, OF PYTHON, YOU
02:34:20PM      CAN SEE THAT IN OUR CASE, IT'S LIKE 250 MEGABYTES,
02:34:24PM      WHICH IS A LOT.
02:34:25PM      AND YOU KNOW, PERL, THAT'S, 50.
02:34:28PM      AT LEAST.
02:34:29PM      AND THE WAY THAT WE WANT TO IMPROVE THAT AND HANDLE
02:34:32PM      IT, IS THAT WE WANT TO SPLIT, ACTUALLY, PACKAGES,
02:34:35PM      INTO A PACKAGES THAT ONLY -- AND EVERYTHING ELSE IS
02:34:41PM      ANOTHER PACKAGE.
02:34:43PM      AND OFFERING DELIP --
02:34:46PM      AND THIS IS A REALLY NICE WAY TO MAKE THIS NUMBER
02:34:50PM      100 MEGABYTES OR EVEN LESS.
02:34:52PM      AND WHEN YOU THINK ABOUT IT, THIS IS ALSO THE
02:34:55PM      PROBLEM THAT THE PEOPLE HAVE.
02:34:58PM      THEY WANT VERY SMALL, YOU KNOW, RUN -- YOU KNOW,
02:35:02PM      BLOBS THAT YOU WANT IN YOUR DOC OR 1 GIGABYTES, AND
02:35:07PM      NIX COULD BE USED AND IMPROVED TO HANDLE THAT.
02:35:11PM      AND HOPEFULLY YOU WILL GET SMALLER IMAGES.
02:35:14PM      THERE ARE IS A BRANCH ON GITHUB THAT HAS THAT, BUT
02:35:17PM      IT'S STILL NOT FINISHED AND HOPEFULLY WE'LL GET IT
02:35:21PM      DONE IN THE NEXT FEW MONTHS.
02:35:24PM      SO THIS IS SOMETHING THAT'S MY PERSONAL GOAL AND
02:35:28PM      THAT'S, YOU KNOW, TO PACKAGE THE WHOLE PYPI AND
02:35:33PM      PROVIDE SYSTEM DEPENDENCIES.
02:35:35PM      AND THE HARDEST PART IS THE FIRST STEP, YOU KNOW.
02:35:39PM      TO ACTUALLY GET THAT PIP DONE AND GET IT OUT THERE,
02:35:43PM      SO THAT WE CAN ACTUALLY HAVE SET OF PYPI AND SAY
02:35:48PM      PYPI GIVE ME ALL THE DATA ABOUT YOUR PACKAGES, AND
02:35:51PM      YOU WOULD GET THAT.
02:35:52PM      BECAUSE NOW YOU HAVE TO DOWNLOAD THE PACKAGE, RUN
02:35:54PM      SET OF PY AND THEN GET DEPENDENCY AND FOR EACH
02:36:00PM      DEPENDENCY, YOU HAVE TO REPEAT THAT.
02:36:01PM      THIS IS TERRIBLE AND TAKES A LOT OF TIME TO DO
02:36:04PM      THAT.
02:36:04PM      AND YOU KNOW, THE SECOND STEP WOULD BE TO GENERATE.
02:36:07PM      WE HAVE TOOLS ALREADY TO DO SO.
02:36:09PM      AND TOOLS TO ACTUALLY PROVIDE THE OVERWRITES AND
02:36:12PM      THE SYSTEM PACKAGES.
02:36:16PM      SO THAT IS A QUICK OVERVIEW OF WHAT'S GOING ON IN
02:36:23PM      THE NIX LAND.
02:36:25PM      AND WE WILL HAVE, JUST LIKE A QA LIVE
02:36:29PM      DEMONSTRATIONS, 515B ROOM IF YOU HAVE QUESTIONS OR
02:36:33PM      SOMETHING LIKE THAT.
02:36:34PM      I ENCOURAGE YOU TO READ THE THINGS.
02:36:36PM      ONE IS, THE MAIN AUTHOR ABOUT OUR NIX, AND HE WROTE
02:36:40PM      A Ph.D. THESIS WHICH IS A REALLY NICE THESIS HOW
02:36:43PM      PACKAGES WE HAVE TODAY ARE BROKEN AND NIX ACTUALLY
02:36:48PM      DOES IMPROVE THAT.
02:36:49PM      AND SECOND IS AN ARTICLE I WROTE WHICH IS DOCS A
02:36:52PM      LITTLE BIT ON CONFIGURATION MANAGEMENT AND HOW THE
02:36:55PM      CURRENT TOOLS WE HAVE ACTUALLY MANAGE THE STATE OF
02:36:57PM      OUR MACHINES.
02:36:58PM      AND, YOU KNOW, THAT STATE IS ALSO HARD TO MANAGE.
02:37:00PM      IT'S NOT JUST THE STATE OF PACKAGING.
02:37:02PM      ALSO THE STATE OF THE...
02:37:05PM      [AUDIO CUTTING IN AND OUT]
02:37:14PM      [APPLAUSE]
02:37:22PM      >> ALL RIGHT.
02:37:22PM      THANKS, EVERYONE.
02:37:23PM      SO WE HAVE A FEW MINUTES FOR QUESTIONS.
02:37:25PM      IF YOU HAVE ANY, LINE UP TO THE MIC -- THE
02:37:28PM      MICROPHONE OVER THERE.
02:37:30PM      LET'S KEEP IT QUICKLY AND ONLY QUESTIONS REGARDING
02:37:33PM      TO THE --
02:37:36PM      >> AUDIENCE: THANK YOU FOR THAT.
02:37:37PM      THEY ARE VERY COOL.
02:37:38PM      SO THEY KEEP VERY --
02:37:42PM      DEPENDENCY GRAPH --
02:37:46PM      [NO AUDIO]
02:37:48PM      THAT YOU CAN BASICALLY TELL NIX THAT RELIES ON
02:37:56PM      GLIBC?
02:37:58PM      >> WE HAVE TO RECOMPILE EVERYTHING, WHICH IS
02:38:02PM      PROBLEMATIC IF YOU WANT TO MOVE FAST AND WE HAVE
02:38:04PM      WAYS TO WORKAROUND THAT.
02:38:05PM      BUT HERE, THE WHOLE IDEA IF YOU CHANGE SOMETHING
02:38:08PM      THAT IS VERY CORE, YOU HAVE TO RECOMPILE
02:38:10PM      EVERYTHING.
02:38:10PM      >> AUDIENCE: COOL, THANK YOU.
02:38:15PM      >> SO THERE'S SOME REALLY COOL THINGS YOU CAN DO
02:38:17PM      WITH NIX SOUNDS LIKE A GREAT OPTION FOR LOTS OF
02:38:20PM      SITUATIONS.
02:38:21PM      NAME SOME SITUATIONS WHERE IT WOULD BE A BAD IDEA
02:38:24PM      TO USE NIX SO WE CAN COMPARE AND CONTRAST?
02:38:27PM      >> ONE OF THE THINGS WE'RE AWARE OF, AND WE ADMIT
02:38:29PM      THAT, IS THAT WE DON'T REALLY -- WE HAVE SECURITY.
02:38:32PM      WE HAVE A STABLE CHANNEL FOR NIXOS.
02:38:36PM      WE ARE A COMMUNITY.
02:38:37PM      THERE IS NO VENDOR BEHIND THIS.
02:38:39PM      AND, YOU KNOW, WE WANT TO -- WE WANT TO WRITE TOOLS
02:38:43PM      THAT WILL HELP US PROTECT THINGS.
02:38:46PM      WE ALSO HAVE MONITORED NIX.ORG FUZZY MATCH THE
02:38:51PM      PACKAGES AND MAP THEM TO -- TO ALERT US WHEN
02:38:57PM      THERE'S SECURITY HOLES.
02:38:58PM      THIS IS NOT PERFECT.
02:38:59PM      SO IF YOU WANT, LIKE, IF YOU WANT LIKE DEBIAN TYPE
02:39:04PM      THING, UPGRADE SECURITY UPDATES, THAT'S WHAT WE
02:39:07PM      DON'T OFFER.
02:39:08PM      THAT'S ONE AREA.
02:39:11PM      BUT ANYTHING ELSE, I THINK IT GOES PRETTY WIDE.
02:39:14PM      WE HAVE A LOT OF DESK MANAGERS AND PEOPLE USE IT ON
02:39:19PM      THE SERVER SIDE.
02:39:20PM      I THINK THERE'S A LOT OF POTENTIAL FOR DOCKER AND
02:39:23PM      SO ON.
02:39:27PM      >> ALL RIGHT.
02:39:27PM      SO I THINK THAT'S IT.
02:39:28PM      THANK YOU, ONCE AGAIN.
02:39:30PM      [APPLAUSE]
02:39:37PM      [MUSIC PLAYING]
