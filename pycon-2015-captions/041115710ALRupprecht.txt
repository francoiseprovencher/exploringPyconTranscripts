
02:05:34   >> GOOD AFTERNOON.
02:07:40   THE FINAL TALK OF OUR SESSION TODAY WILL BE GIVEN
02:07:42   BY LAURA RUPPRECHT WHO WORKS FOR ZEFR IN LOS
02:07:45   ANGELES.
02:07:46   SHE'LL TALK ABOUT DESCRIPTORS, SO PLEASE GIVE HER
02:07:48   A WARM WELCOME.
02:07:50   [ Applause ]
02:07:55   >> HEY, EVERYBODY.
02:07:56   I'M LAURA RUPPRECHT AND, YES, I'M HERE TO TALK
02:08:02   ABOUT DESCRIPTORS.
02:08:02   A LITTLE BIT MORE ABOUT ME.
02:08:04   I LIVE IN L.A. NOW, I WORK AT ZEFR.
02:08:07   WE DO A LOT OF CONTENT MANAGEMENT FOR PEOPLE ON
02:08:10   YOUTube AND I WORK ON A REALLY SMALL TEAM AND
02:08:13   WE WORK ON THE ADTECH SIDE.
02:08:17   SO ON THE DOWN SIDE, I PUT A LOT OF ADS ON CUTE
02:08:21   CAT VIDEOS BUT ON THE UPSIDE, YOU GET TO SEE ALL
02:08:25   THE CUTE CAT VIDEOS FOR FREE, SO PLUSES AND
02:08:29   MINUSES.
02:08:30   SOMETIMES I POST THINGS ON TWITTER.
02:08:32   THAT'S HOW I GET IN TOUCH.
02:08:34   SO I WANTED TO TALK A LITTLE BIT ABOUT WHAT A
02:08:38   DESCRIPTOR ACTUALLY IS, BECAUSE I DON'T THINK
02:08:40   THERE'S A LOT OF STUFF OUT THERE THAT REALLY GOES
02:08:44   OVER IT IN PRAGMATIC WAY AND TO DO THAT, I'M
02:08:50   GOING TO GO OVER A CUSTOM EXAMPLE AND THEN TALK A
02:08:52   LITTLE BIT ABOUT THE KIND OF DESCRIPTORS THAT
02:08:54   EXIST IN PYTHON AND HOW THEY'RE ACTUALLY USED IN
02:08:57   THE STANDARD LIBRARY, AND THEN TOUCH A LITTLE BIT
02:09:01   ON A FEW EXAMPLES SO, LIKE, PROPERTIES, CLASS
02:09:05   METHODS, A LITTLE BIT OF USAGE IN ORM AND THEN
02:09:08   TALK ABOUT A COUPLE OF COMMON PROBLEMS THAT YOU
02:09:12   MIGHT RUN INTO WHEN YOU'RE USING THEM.
02:09:14   SO FIRST THINGS FIRST.
02:09:16   WHAT EXACTLY IS A DESCRIPTOR?
02:09:18   SO, IT'S A CERTAIN TYPE OF ATTRIBUTE, SO HERE I
02:09:22   HAVE SOME DESCRIPTOR AND I'M USING THIS AS THIS
02:09:27   CLASS ATTRIBUTE ON THIS CLASS FOO, AND SO SOME
02:09:33   DESCRIPTOR SOMETHING THAT I'M USING INSTEAD OF A
02:09:37   NORMAL ATTRIBUTE, LIKE INSTEAD OF A STRING OR
02:09:41   ANOTHER RANDOM OBJECT AND AS LONG AS YOU DEFINE
02:09:53   DUNDER GET, DUNDER DELETE, THIS IS HOW THIS DOES
02:09:56   ITS MAGIC.
02:09:58   SO WHAT DOES THAT MEAN?
02:10:00   WHEN YOU WRITE A DESCRIPTOR, IT SHOULD LOOK
02:10:02   SOMETHING LIKE THIS, IF YOU WRITE THE CLASS.
02:10:05   QUICK NOTE, I'M DOING ALL OF MY EXAMPLES IN
02:10:09   PYTHON 3, SO IF YOU'RE DOING PYTHON 2, STILL, IN
02:10:14   THIS DESCRIPTOR CLASS, YOU HAVE TO INHERIT FROM
02:10:16   OBJECT OR ELSE IT WON'T WORK.
02:10:18   SO I HAVE AN INIT FUNCTION, I CAN PASS IN A BUNCH
02:10:25   OF ARGUMENTS, KEY WORD ARGUMENTS AND THAT SORT OF
02:10:28   DEFINES WHAT I'M DOING WITH THIS DESCRIPTOR, AND
02:10:31   THEN I HAVE MY GET METHOD AND SET AND DELETE,
02:10:36   WHICH DEFINES HOW I'M DOING ALL OF MY ATTRIBUTE
02:10:39   ACCESS.
02:10:39   SO THE INTERESTING THING ON THIS DUNDER GET
02:10:43   METHOD IS THAT I'M PASSING IN THE INSTANCE ON
02:10:48   WHICH I'M USING THIS DESCRIPTOR, WHICH I'LL SHOW
02:10:53   AN EXAMPLE SO HOPEFULLY IT'S A LITTLE BIT MORE
02:10:55   CLEAR, AND THEN I PASS IN THE OWNER, WHICH IS
02:10:59   PRETTY MUCH THE CLASS OF THAT INSTANCE.
02:11:02   SO I CAN ACTUALLY CALL THIS DIRECTLY FROM THE
02:11:05   CLASS AND HAVE DIFFERENT BEHAVIOR FROM IF YOU
02:11:09   CALL THIS ON AN INSTANCE, WHICH IS INTERESTING,
02:11:13   WHEREAS THE GET AND THE SET, THEY ONLY REALLY
02:11:15   CARE ABOUT THE INSTANCE AND THEN WHATEVER VALUES
02:11:17   YOU'RE TRYING TO SET ON THAT INSTANCE.
02:11:20   SO HOW I GOT INVOLVED IN TRYING TO FIGURE OUT HOW
02:11:26   DESCRIPTORS WORK IS I DEAL WITH A LOT OF VIDEO
02:11:30   STUFF AND I HAD TO DEAL WITH THE YOUTube API,
02:11:34   AND IT'S A LOT OF JSON SO I HAVE A BUNCH OF
02:11:39   DICTIONARY ACCESS EVERYWHERE IN THE CODE.
02:11:43   SO I'M DEALING WITH STUFF LIKE THIS.
02:11:44   SO IF I WANT TO PULL OUT A URL FROM A RESPONSE
02:11:49   THAT I GET, I HAVE TO GET THE VIDEO RESPONSE AND
02:11:51   I HAVE TO PULL OUT THE SNIPPET AND THE
02:11:53   THUMBNAILS.
02:11:54   THEN I HAVE TO PULL OUT THE PARTICULAR RESOLUTION
02:11:56   THUMBNAIL THAT I WANT AND THEN I HAVE TO PULL OUT
02:11:59   THE URL, AND, YEAH, IT'S OKAY BUT IT'S A REAL
02:12:04   PAIN TO DEAL WITH.
02:12:05   MY I.D.E. IS DO NOT REALLY DO ANY AUTO COMPLETE
02:12:10   FOR THIS TYPE OF THING BECAUSE IT'S JUST
02:12:12   DICTIONARY ACCESS, SO MY BOSS AT THE TIME, THIS
02:12:15   IS WHEN I WAS WORKING AT THE ZEFR BOSTON OFFICE,
02:12:19   JONATHAN TUSHMAN, HE CAME UP TO ME AND HE'S
02:12:23   ALWAYS EXCITED ABOUT EVERYTHING.
02:12:24   SO HE SAID, OKAY, I THINK I KNOW HOW TO SOLVE
02:12:26   THIS PROBLEM AND I THINK THE WAY TO DO IT IS TO
02:12:29   USE DESCRIPTORS.
02:12:30   TO WHICH I SAID, AH, OKAY, SO WHAT'S A
02:12:36   DESCRIPTOR?
02:12:36   WHICH BROUGHT ME TO THAT WHOLE THING WHERE I WAS
02:12:40   TRYING TO FIGURE OUT WHAT IT WAS, WHICH IF YOU
02:12:42   LOOK IN THE OFFICIAL DOCUMENTATION, IT'S AN
02:12:45   ATTRIBUTE WITH SOME SORT OF BINDING BEHAVIOR,
02:12:48   WHICH IN RETROSPECT, RIGHT, AFTER I'VE DONE ALL
02:12:51   OF THIS READING ON DESCRIPTORS, TOTALLY MAKES
02:12:54   SENSE.
02:12:55   ABSOLUTELY MAKES SENSE.
02:12:57   BUT WHEN I WAS FIRST LOOKING AT THIS, IT -- LIKE
02:12:59   WHAT KIND OF BINDING BEHAVIOR?
02:13:02   SO THAT'S THAT GET, SET AND DELETE THAT I WAS
02:13:05   TALKING ABOUT.
02:13:07   SO FORGET THAT, LET'S JUST LOOK AT THIS LOVELY
02:13:13   RESPONSE THAT I GET BACK FROM YOUTube.
02:13:15   AND THIS ISN'T EVEN IF I PULL OUT ALL THE FIELDS
02:13:18   THAT I CAN PULL OUT.
02:13:20   SO THAT'S MY LOVELY DICTIONARY ACCESS.
02:13:23   IT'S KIND OF ANNOYING.
02:13:25   AND I'M NOT EVEN USING MOST OF THIS SO MOST OF
02:13:28   THIS I'M JUST GOING TO IGNORE.
02:13:30   SO I'M DEALING WITH IT LIKE THIS, BUT HOW CAN I
02:13:34   MAKE THIS A LITTLE BIT PRETTIER TO DEAL WITH?
02:13:40   AND SO FIRST TRY IS TAKE THIS AND PUT IT INTO AN
02:13:45   OBJECT.
02:13:45   I HAVE THIS RESPONSE, IT WOULD BE MYSELF TO
02:13:47   PACKAGE THAT UP SOMEHOW, SO I DO ALL OF THAT SAME
02:13:50   DICTIONARY ACCESS AND I PUT IN ALL OF THE
02:13:53   RESPONSES AND I PULL OUT ALL THE FIELDS IN MY
02:13:57   INIT FUNCTION.
02:13:58   THE ONLY PROBLEM HERE IS IF I UPDATE ANY OF THIS
02:14:01   STUFF, I HAVE TO DO IT EXPLICITLY BECAUSE ONCE I
02:14:04   SET THESE THINGS ON SELF, IT WON'T AUTOMATICALLY
02:14:09   UPDATE, SO IF THE RESPONSE CHANGES, I CAN'T JUST
02:14:13   UPDATE THE RESPONSE ON THE OBJECT AND THEN HAVE
02:14:17   THAT SORT OF BUBBLE UP TO ALL OF THOSE
02:14:20   ATTRIBUTES.
02:14:20   SO, OKAY, A LITTLE BIT BETTER.
02:14:26   THIS JUST FOR THE SAKE OF CONVENIENCE I FIGURED I
02:14:28   WOULD USE A DICTIONARY DIGGER MODULE, WHICH
02:14:32   YOU'LL SEE WHY I'M DOING THIS IN A LITTLE BIT.
02:14:36   IT LETS YOU PASS IN A BUNCH OF PATH ARGUMENTS AND
02:14:40   THEN IT USES THAT TO PULL OUT ALL OF THOSE JSON
02:14:44   RESPONSES BUT IT STILL HAS THE SAME PROBLEM AS
02:14:46   THE LAST EXAMPLE WHICH IS NAMELY THAT I HAVE THIS
02:14:49   JSON RESPONSE AND IT -- IF I UPDATE THE JSON
02:14:55   RESPONSE, THAT JSON RESPONSE WILL BE OUT OF SYNC
02:14:57   WITH ALL OF THESE ATTRIBUTES THAT I HAVE IN THAT
02:15:00   INSTANCE.
02:15:00   SO STILL REPETITIVE, NOW WE BRING IN THE MAGIC.
02:15:05   SO I HAVE A DESCRIPTOR NOW, RIGHT?
02:15:09   AND THIS IS THE COOL THING.
02:15:10   SO I HAVE A JSON RESPONSE IN MY YOUTube
02:15:15   RESPONSE CLASS.
02:15:17   OR IN AN INSTANCE OF MY YOUTube RESPONSE
02:15:21   CLASS.
02:15:22   AND THEN IF YOU NOTICE THE YOUTube I.D. AND
02:15:26   THE TITLES AND THE VIEWS AND THE DESCRIPTION, I'M
02:15:29   JUST USING A DESCRIPTOR FOR THAT.
02:15:30   SO WHAT THIS DESCRIPTOR IS ACTUALLY DOING, I
02:15:33   INITIALIZE IT AND THIS GETS EXECUTED WHEN I FIRST
02:15:38   CREATE THIS CLASS AND I'M SPECIFYING THE RULES
02:15:43   FOR PULLING OUT THESE ATTRIBUTES.
02:15:45   SO INSTEAD OF SETTING SOMETHING TO SELF IN AN
02:15:51   INIT FUNCTION, I'M SAILING THIS IS MY DESCRIPTOR
02:15:54   WHEN I DO A GET OPERATION SO INSTANCE OF
02:15:59   YOUTube RESPONSE.VIEWS, GO TO THIS GET
02:16:04   FUNCTION, PASS IN THAT INSTANCE THAT I HAVE, AND
02:16:06   THEN PASS IN THE CLASS, AND THEN PULL OUT
02:16:12   WHATEVER IS THE PATH FOR GETTING THAT JSON
02:16:16   RESPONSE OUT.
02:16:17   AND I SET UP THE PATH, THAT'S THE FIRST THING
02:16:20   THAT HAPPENS WHEN THIS CLASS IS CREATED.
02:16:24   SO JUST FOR COMPLETENESS, FIGURE IT ADDS SOME
02:16:29   ERROR CHECKING, SO IF I RUN INTO AN INDEX ERROR
02:16:33   OR KEY ERROR, GIVE BACK A MORE USEFUL ERROR.
02:16:38   SO GIVE BACK AN ATTRIBUTE ERROR BECAUSE THAT'S
02:16:42   WHAT YOU WOULD EXPECT IN THIS CASE, AND THEN I
02:16:43   STILL HAVE THE YOUTube RESPONSE AS BEFORE.
02:16:46   SO IT'S A LOT EASIER TO DEAL WITH AND THEN I CAN
02:16:51   PULL OUT THE TITLE REALLY EASILY AND I CAN
02:16:57   RICK-ROLL EVERYBODY.
02:16:59   SO, NOW, I DIDN'T EXPLAIN EVERYTHING, THOUGH, SO
02:17:05   THERE'S TWO TYPES OF DESCRIPTORS.
02:17:08   THERE'S A DATA DESCRIPTOR WHERE YOU DEFINE A GET
02:17:12   AND THEN YOU DEFINE A SET AND/OR DELETE.
02:17:16   AND THEN THERE IS A NONE DATED DESCRIPTOR WHERE
02:17:22   WHERE YOU JUST DEFINE A GET FUNCTION.
02:17:23   SO, LIKE, WHY DO I HAVE THESE?
02:17:26   SO WHEN I LOOK UP AN ATTRIBUTE, PYTHON IS
02:17:29   DICTIONARIES ALL THE WAY DOWN, IF YOU TALK TO
02:17:31   ANYONE, THEY SAY, YEAH, EVERYTHING IN PYTHON IS A
02:17:33   DICTIONARY, SO WHAT HAPPENS WHEN I LOOK UP
02:17:36   FOOD.X, IS I LOOK IN THAT INSTANCE DICTIONARY AND
02:17:39   THEN I PULL OUT X AND I GET WHATEVER I PUT IN
02:17:44   THERE.
02:17:47   WELL, KIND OF, RIGHT.
02:17:49   LIKE THIS ENTIRE TALK IS, YEAH, THAT'S HOW IT
02:17:51   WORKS BUT IT ACTUALLY WORKS LIKE THIS.
02:17:54   SO WHEN I LOOK FOR FOO.X, I'M BREAKING IT UP INTO
02:18:00   FOUR STEPS, RIGHT?
02:18:01   SO FIRST I CHECK THE CLASS DICTIONARY FOR A DATA
02:18:04   DESCRIPTOR, SO IT HAS TO HAVE A SET OR DELETE IN
02:18:08   ADDITION TO A GET METHOD DEFINED.
02:18:11   SO FIRST I CHECK THERE.
02:18:13   IF THERE IS A NON-DATA DESCRIPTOR OR IF THERE'S
02:18:17   JUST A NORMAL ATTRIBUTE, DON'T CARE, SKIP IT.
02:18:22   IF I DON'T FIND THAT, I CHECK THE INSTANCE
02:18:24   DICTIONARY AND THAT'S SORT OF THE NORMAL PYTHON
02:18:32   ACCESS THAT YOU'RE LOOKING FOR.
02:18:33   IF I DON'T FIND THAT, THEN I LOOK ON THE CLASS
02:18:36   AGAIN FOR A NON-DATA DESCRIPTOR OR JUST A CLASS
02:18:39   ATTRIBUTE, OR IF I DON'T FIND ANYTHING, THROW AN
02:18:45   ATTRIBUTE THERE.
02:18:46   REMEMBER, THIS ALSO GOES FOR EVERYTHING IN THE
02:18:50   RESOLUTION METHOD ORDER, IF YOU DON'T FIND
02:18:51   ANYTHING IN THAT CLASS.
02:18:52   SO WHY ON EARTH IS THIS SPLIT UP?
02:18:58   IT'S A WAY TO HAVE FUNCTION OR METHOD ACCESS FIT
02:19:06   IN A LITTLE BIT BETTER WITH ATTRIBUTE ACCESS IN
02:19:10   GENERAL.
02:19:12   SO WHEN YOU CALL A FUNCTION, YOU CALL
02:19:14   INSTANCE.FOFX.
02:19:18   THEN YOU CHECK THAT CLASS DICTIONARY FOR A DATA
02:19:22   DESCRIPTOR.
02:19:24   YOU DON'T USUALLY FIND ONE OF THOSE FOR A NORMAL
02:19:27   METHODICAL, SO THEN YOU CHECK THE INSTANCE
02:19:29   DICTIONARY OF WHATEVER YOU'RE CALLING THIS ON FOR
02:19:34   ANY KIND OF ATTRIBUTE.
02:19:37   DON'T USUALLY FIND THAT, SO THEN YOU GO AND YOU
02:19:40   FIND A NON-DATA DESCRIPTOR BACK IN THE CLASS --
02:19:45   IN THE CLASS DICTIONARY.
02:19:48   AND THEN YOU PULL OUT THAT SPECIFIC FUNCTION WITH
02:19:53   THE INSTANCE AND THE OWNER, USING THAT GET
02:19:58   DESCRIPTOR METHOD, AND THEN YOU HAVE THE FUNCTION
02:20:02   AND SO THAT SELF, WHICH IS USUALLY YOUR FIRST
02:20:06   ARGUMENT, THAT'S WHAT YOU MORE OR LESS PASS INTO
02:20:09   THAT FUNCTION.
02:20:11   SO IN THIS WHOLE LINE OF LOOKING UP AN ATTRIBUTE,
02:20:17   WHEN YOU HAVE A FUNCTION, YOU'RE DOING THIS THIRD
02:20:20   STEP.
02:20:21   SO NOW THAT WE'VE GONE OVER THAT, PROPERTY AND
02:20:25   CLASS METHOD.
02:20:26   THEY GET USED A LOT AND A LOT OF TIMES PEOPLE
02:20:29   DON'T KNOW WHY THEY WORK BUT THEY DO AND IT'S
02:20:31   MAGIC AND IT'S REALLY NICE AND FOR PROGRAMMING,
02:20:38   IT'S A PRETTY NEAT WAY TO GET DESCRIPTOR
02:20:41   FUNCTIONALITY WITHOUT HAVING TO DO ALL OF THESE
02:20:43   SETTING EVERYTHING UP YOURSELF.
02:20:45   SO WHEN YOU HAVE SOMETHING SET UP AS A PROPERTY,
02:20:48   YOU ACTUALLY TRANSFORM SOMETHING WITH THIS
02:20:52   DECORATOR FROM SOMETHING LIKE -- LIKE PROPERTY
02:21:00   DEATH BAR RETURN, WHATEVER THE ANSWER IS, INTO
02:21:03   THIS PROPERTY-LIKE THING.
02:21:04   SO YOU'LL IN THE, IF YOU'RE FAMILIAR WITH THE WAY
02:21:08   PROPERTIES WORK, YOU CAN ACTUALLY DO SOMETHING
02:21:10   LIKE BAR.SETTER OR BAR.DELETER, AND THEN THAT
02:21:14   WILL MORE OR LESS ADD THOSE FUNCTIONS TO THIS BAR
02:21:18   PROPERTY.
02:21:20   BUT MOST OF THE TIME I SEE THIS, PEOPLE JUST HAVE
02:21:23   A SINGLE PROPERTY, SO THEY JUST DEFINE THE GETTER
02:21:26   AND YOU CAN DEFINE DOCUMENTATION, TOO, WHICH IS
02:21:29   KIND OF NEAT.
02:21:32   SO THAT'S ESSENTIALLY WHAT THIS GETS TRANSFORMED
02:21:35   INTO.
02:21:36   NOW, WHEN I USE THIS LIKE THIS, IT'S REALLY NICE
02:21:40   BECAUSE I GET TO TREAT IT SORT OF AS AN
02:21:42   ATTRIBUTE, SO IF IT'S SOMETHING THAT HAS TO BE
02:21:44   COMPUTED ON THE FLY, I CAN USE IT THAT WAY.
02:21:49   BUT YOU HAVE TO REMEMBER, EVEN IF YOU DON'T SET
02:21:52   THE UPSET METHOD OR THE DELETE METHOD, THIS IS
02:21:58   ALWAYS A DATA DESCRIPTOR SO IT WILL ALWAYS TAKE
02:22:01   PRECEDENCE IN THAT ORDER I SHOWED EARLIER.
02:22:03   ON THE OTHER HAND, CLASS METHOD TRANSFORMS YOUR
02:22:09   CODE FROM SOMETHING LIKE THIS INTO THIS SPECIAL
02:22:13   CLASS METHOD ATTRIBUTE, AND THE WAY YOU USE THAT
02:22:17   IS YOU CALL IT EITHER ON AN INSTANCE OR YOU CAN
02:22:22   CALL IT ON THE CLASS ITSELF.
02:22:25   AND THIS IS ALSO A NON-DATA DESCRIPTOR, AND I'M
02:22:29   NOT GOING TO GO OVER STATIC METHOD BUT THAT'S
02:22:31   SIMILAR.
02:22:32   SO IN ORMs, NOW THAT YOU'VE SEEN A LOT OF THESE
02:22:39   IN THE EARLIER PORTIONS OF THIS TALK, YOU'LL
02:22:41   NOTICE THAT I HAVE THIS CAR FIELD AND THIS DATE
02:22:45   FIELD AND THOSE ARE DESCRIPTORS, RIGHT, BECAUSE
02:22:47   THE NAME AND THE BIRTHDAY, THOSE ARE DEFINED ON
02:22:50   THIS PERSON CLASS, SO I HAVE THESE ATTRIBUTES
02:22:54   THAT ARE SET ON THE CLASS AND I'M USING THEM TO
02:22:58   DEFINE HOW I'M GETTING THINGS OUT OF AN INSTANCE
02:23:00   OF THAT CLASS.
02:23:02   IT'S A LITTLE ROUNDABOUT BUT I CAN DO STUFF
02:23:06   THAT'S COOL LIKE THIS, LIKE SETTING A MAXIMUM
02:23:09   LENGTH ON A FIELD.
02:23:11   AND USE THAT JUST HOWEVER I WOULD NORMALLY USE IT
02:23:17   IN DJANGO AND I CAN JUST SOME CRAZY VALIDATION,
02:23:20   AND IT WILL TELL ME, NO, THIS DOESN'T WORK.
02:23:24   SO WHY WOULD YOU WANT TO DO THIS, BECAUSE THESE
02:23:31   ARE SUPER COMPLICATED?
02:23:32   SO A LOT OF THIS VALIDATION -- I SEE A LOT OF
02:23:35   THIS FOR CONVERTING UNITS, IF YOU'RE DOING A LOT
02:23:38   OF GETTING AND SETTING AND LET'S SAY YOU RESTORE
02:23:41   EVERYTHING ON THE BACK END IN METRIC BUT YOU HAVE
02:23:44   SOME CRAZY U.S. PEOPLE WHO WANT TO USE IMPERIAL
02:23:48   UNITS.
02:23:48   YOU CAN MAKE IT EASIER TO MANIPULATE THOSE FIELDS
02:23:52   AND YOU DON'T HAVE TO WORRY ABOUT YOUR
02:23:55   DIFFERENT -- YOUR DIFFERENT ATTRIBUTES ON YOUR
02:23:57   INSTANCES BECOMING OUT OF SYNC HAVE WHY NOT TO
02:24:00   USE THIS?
02:24:01   BECAUSE IT LOOKS AWESOME.
02:24:03   JOB SECURITY.
02:24:05   ALTHOUGH IN HINDSIGHT, THOSE MIGHT BE WHY YOU
02:24:10   SHOULD USE DESCRIPTORS, SO, AGAIN, PLUSES AND
02:24:14   MINUSES.
02:24:15   AND BECAUSE YOU'RE SETTING ALL THIS STUFF UP
02:24:22   YOURSELF, YOU SHOULD THINK ABOUT INCLUDING SOME
02:24:24   OTHER ERROR CHECKING SO THAT WHEN PEOPLE USE THIS
02:24:26   STUFF, WHEN THEY HIT AN EXCEPTION FOR SOME
02:24:28   REASON, THEY KNOW WHY THEY'RE GETTING THAT
02:24:33   EXCEPTION SO IF YOU DECIDE YOU DON'T WANT TO
02:24:35   IMPLEMENT SOMETHING, ADD A NOT-IMPLEMENTED ERROR.
02:24:39   OR IF YOU DON'T WANT AN ATTRIBUTE TO EXIST ON A
02:24:43   CERTAIN CLASS OR ON A CERTAIN INSTANCE, THEN YOU
02:24:46   CAN RAISE THAT.
02:24:47   NOW, LAST THINGS IS IT'S REALLY EASY TO MESS THIS
02:24:55   STUFF UP, ESPECIALLY IF YOU'RE USED TO USING SORT
02:24:58   OF NORMAL PYTHON CLASSES.
02:25:02   AND NOT DESCRIPTORS.
02:25:04   SO WHAT I'M DOING HERE IS I'M INITIALIZING SOME
02:25:08   VALUE ON A DESCRIPTOR TO NONE.
02:25:11   I HAVE A GET METHOD AND I RETURN THE VALUE, I LET
02:25:15   YOU SET THE VALUE.
02:25:19   PROBLEM HERE IS, LIKE, THIS IS NORMAL PYTHON
02:25:22   CODE, RIGHT?
02:25:23   YOU CAN EXECUTE IT, IT DOES STUFF, BUT IF I MAKE
02:25:28   THING ONE THAT'S AN INSTANCE OF THAT CLASS, AND I
02:25:32   SET AN ATTRIBUTE ON, SAY, X, WHATEVER IS THIS
02:25:37   DESCRIPTOR, ESSENTIALLY SET THAT AS A CLASS
02:25:42   ATTRIBUTE BECAUSE I MAKE ANOTHER INSTANCE OF THAT
02:25:46   CLASS AND THEN I PRINT OUT THING2.X AND I GET
02:25:51   WHAT I PUT INTO THE FIRST ONE.
02:25:53   WHY IS THAT?
02:25:53   BECAUSE I HAVE ONE INSTANCE OF THIS DESCRIPTOR
02:25:56   DEFINING THAT X FIELD AND I'M STORING THAT HELLO
02:26:01   WORLD, I'M STORING THAT ON THAT DESCRIPTOR WHICH
02:26:09   IS WHY I GET THAT BACK WHEN I HAVE THING2.X.
02:26:13   ANOTHER THING TO LOOK OUT FOR IS INFINITE
02:26:16   RECURSION.
02:26:17   DON'T USE YOUR GET FUNCTIONS TO DO A GET ADDER
02:26:22   BECAUSE THAT WILL JUST CALL YOUR GET FUNCTION
02:26:24   AGAIN.
02:26:32   THERE IS A WAY TO DEAL WITH THIS, A FEW GOOD
02:26:34   WAYS.
02:26:34   YOU'RE REALLY NOT USING THAT INSTANCE DICTIONARY
02:26:38   SO WHY NOT STORE THE STUFF THERE?
02:26:40   THROW IN SOME ERROR CHECKING AND THEN I CANNOT
02:26:43   EVEN INCLUDE A SETTER.
02:26:46   SO USE THAT INSTANCE DICTIONARY AND THEN ANOTHER
02:26:54   THING TO NOTE IS THIS SET.
02:26:55   IF I DON'T INCLUDE THIS SET, THEN I HAVE A
02:26:58   NON-DATA DESCRIPTOR, WHICH MEANS THAT THAT
02:27:04   INSTANCE DICTIONARY, I DON'T LIKE THAT ATTRIBUTE
02:27:09   WILL BE RETURNED FROM THAT INSTANCE DICTIONARY
02:27:12   BECAUSE IT WILL TAKE PRECEDENCE OVER THAT GET
02:27:16   METHOD.
02:27:16   BUT IF I DO HAVE IT, THEN I'M JUST RETURNING
02:27:19   WHATEVER IS IN THAT DICTIONARY.
02:27:21   SO THERE ISN'T TOO MUCH REALLY AWESOME STUFF OUT
02:27:28   THERE ON DESCRIPTORS BUT THERE ARE A FEW REALLY
02:27:31   GOOD THINGS, SO DE-MYSTIFYING DESCRIPTORS IN FIVE
02:27:37   MINUTES BY CHRIS BIAUMONT WITH A REALLY SNAZZY
02:27:42   PYTHON NOTEBOOK, THAT'S A GOOD ONE, FIVE MINUTES,
02:27:44   SUPER NICE.
02:27:45   I REALLY LIKE DAVID BEASLEY'S PYTHON 3 META
02:27:49   PROGRAMMING TUTORIAL.
02:27:49   UNFORTUNATELY IT'S LIKE THREE HOURS LONG.
02:27:51   IT'S A THREE HOURS THAT I WOULD DEFINITELY
02:27:53   RECOMMEND, THOUGH, REALLY GOOD.
02:27:55   ON THE SHORTER SIDE OF THINGS, AGAIN, IS SIMIAN
02:28:01   FRANKLIN HAS A REALLY GOOD THREE-MINUTE
02:28:06   PRESENTATION ON PYTHON DESCRIPTORS AND HE DOES A
02:28:10   GOOD JOB OF GOING THROUGH ALL THE PYTHON ACCESS.
02:28:12   AND TRIED AND TRUE, RAYMOND HEADINGER'S
02:28:16   DESCRIPTOR HOW-TO GUIDE.
02:28:18   FOR THAT ONE, I DEFINITELY RECOMMEND READING IT
02:28:20   AND GOING AND DOING SOME OTHER READING AND THEN
02:28:23   COMING BACK TO IT AND WHEN YOU COME BACK TO IT,
02:28:26   THERE WILL BE SO MUCH STUFF THAT JUST DIDN'T
02:28:29   REALLY SINK IN BEFORE BUT BECOMES REALLY CLEAR
02:28:33   LATER.
02:28:33   AND THEN ALSO THE INSIDE STORY ON NEW STYLE
02:28:37   CLASSES, ALSO REALLY GOOD.
02:28:39   HE GOES INTO A LOT OF WHY METHODS WORK THE WAY
02:28:46   THEY DO AND HOW THEY'RE SORT OF WRAPPED IN ORDER
02:28:49   TO HAVE AN INSTANCE BE ABLE TO CALL A METHOD ON
02:28:52   IT AND THEN HAVE THAT CALL A FUNCTION WITH YOUR
02:28:57   INSTANCE AS THE FIRST ARGUMENT AUTOMATICALLY.
02:29:00   SO THESE ARE ALL REALLY GOOD.
02:29:03   I'LL POST THE SLIDES SO YOU CAN PULL THOSE OUT.
02:29:07   SLIDES ARE THERE AT PYDESCRIPTORS AND YOU CAN
02:29:12   CONTACT ME THAT WAY.
02:29:14   SO, THANKS.
02:29:14   IF YOU HAVE ANY QUESTIONS, LOVE TO ANSWER THEM.
02:29:18   [ Applause ]
02:29:31   >> AUDIENCE:  THANKS FOR YOUR TALK.
02:29:33   I GOT A -- BY THE SLIDE THAT I DIDN'T HAVE TIME
02:29:36   TO LOOK AT THE CODE.
02:29:38   CAN YOU GO BACK AND DO THE SLIDE, PLEASE?
02:29:40   >> WHICH ONE?
02:29:43   >> AUDIENCE:  THE RED CRAWL ONE, WHEN YOU GOT THE
02:29:47   ATTRIBUTES -- FINAL SOLUTION FOR THE ATTRIBUTE
02:29:51   FOR THE YOUTube.
02:29:54   YEAH, THAT ONE.
02:29:57   >> THIS ONE?
02:29:58   >> AUDIENCE:  NO, PREVIOUS -- THE BIG...
02:30:01   YEAH.
02:30:02   >> YEAH.
02:30:03   >> AUDIENCE:  I GOT DISTRACTED BY THE IMAGE.
02:30:06   [ Laughter ]
02:30:08   >> I KNOW, THAT'S BEAUTIFUL.
02:30:10   ACTUALLY DID PULL THIS OUT USING THE YOUTube
02:30:13   API.
02:30:14   TO GET THE MAXIMUM RESOLUTION URL.
02:30:18   [ Laughter ]
02:30:20   >> AUDIENCE:  HI.
02:30:21   I ACTUALLY HAVE A QUESTION ABOUT THE NEXT SLIDE.
02:30:24   [ Laughter ]
02:30:25   >> THIS.
02:30:26   >> AUDIENCE:  NEXT ONE.
02:30:27   >> THE NEXT-NEXT ONE.
02:30:28   >> AUDIENCE:  THIS ONE, YES.
02:30:30   YOU SAY THAT THERE IS A DIFFERENCE BETWEEN STEP
02:30:32   ONE AND STEP 3 AND I DON'T REALLY SEE IT.
02:30:35   YOU SAY TYPE FOUR AND YOU WERE CHECKING FOR DATA
02:30:38   DESCRIPTOR AND THEN FOR CHECKING FOR NON-DATA
02:30:41   DESCRIPTOR BUT LOOKING AT THE CODE, I CAN'T TELL
02:30:43   THE DIFFERENCE.
02:30:44   >> OH, OKAY, SO THIS LOOKS IN THE SAME PLACE, SO
02:30:48   IN BOTH OF THOSE STEPS, YOU LOOK AT THE CLASS OF
02:30:53   WHATEVER INSTANCE YOU HAVE AND THEN YOU LOOK IN
02:30:54   THE CLASS DICTIONARY AND THEN YOU LOOK AT
02:30:58   WHATEVER -- X, IN THIS CASE.
02:31:01   THE DIFFERENCE IS THAT IN STEP 1, YOU'RE
02:31:05   EXPLICITLY CHECKING FOR SOMETHING THAT HAS A SET
02:31:10   OR DELETE, AND THE PYTHON INTERPRETER LOOKS FOR
02:31:14   THIS AND IF YOU HAVE SOMETHING THAT DOESN'T HAVE
02:31:17   SET OR DELETE BUT JUST HAS A GET, THAT'S SORTS OF
02:31:20   TERMED AS A NON-DATA DESCRIPTOR AND THEN YOU
02:31:24   DON'T PULL THAT OUT UNTIL THE THIRD STEP HERE.
02:31:30   SO IF YOU HAVE A SET OR DELETE ALONG WITH YOUR
02:31:34   GET, YOU'LL HIT STEP ONE WHEN YOU PULL OUT THAT
02:31:39   TRIBUTE.
02:31:40   OTHERWISE, YOU'LL GO THROUGH THESE OTHER STEPS.
02:31:43   AND THE REASON THEY DID THIS WAS SO THAT YOU
02:31:46   COULD HAVE FUNCTION CALLS OR METHOD CALLS,
02:31:50   RATHER, AND THOSE USUALLY ARE FOUND IN THIS THIRD
02:31:56   STEP BECAUSE THEY'RE -- LIKE, YOU HAVE A FUNCTION
02:31:59   THAT'S SORT OF WRAPPED IN A NON-DATA DESCRIPTOR
02:32:02   SO THAT YOU CAN PASS IN THAT INSTANCE AS THE
02:32:05   FIRST ARGUMENT WHEN YOU'RE CALLING THAT FUNCTION.
02:32:09   BUT YOU CAN ACTUALLY OVERRIDE THAT CALL ON THE
02:32:14   INSTANCE ITSELF BECAUSE IF YOU PUT SOMETHING INTO
02:32:17   THAT INSTANCE DICTIONARY, WHEN YOU GO TO CALL
02:32:21   THAT FUNCTION, IT WILL HIT THAT SECOND STEP
02:32:24   FIRST, OR SECOND.
02:32:27   IT WILL HIT IT BEFORE THE THIRD STEP AND THAT'S
02:32:28   WHAT'S IMPORTANT.
02:32:29   >> AUDIENCE:  SO WHEN IT COMES TO FUNCTIONS,
02:32:31   WOULD THEY BE CONSIDERED DATA DESCRIPTORS OR
02:32:34   NON-DATA DESCRIPTORS?
02:32:35   >> NON-DATA DESCRIPTORS.
02:32:37   >> AUDIENCE:  THANK YOU.
02:32:38   >> AUDIENCE:  YOU ACTUALLY JUST ANSWERED MY
02:32:40   QUESTION.
02:32:41   [ Laughter ]
02:32:41   >> YES, TWO FOR ONE.
02:32:45   >> AUDIENCE:  OKAY.
02:32:46   THANK YOU VERY MUCH, LAURA.
02:32:47   >> THANK YOU.
02:32:48   [ Applause ]
03:09:59

