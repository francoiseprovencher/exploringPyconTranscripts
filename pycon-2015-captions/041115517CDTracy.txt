                041115517CDTRACY
01:35:00PM      >> ALL RIGHT, EVERYONE.
01:35:01PM      WELCOME BACK.
01:35:02PM      SO WE NOW HAVE DON TRACY.
01:35:07PM      [NO AUDIO]
01:35:11PM      [APPLAUSE]
01:35:16PM      >> HI, EVERYONE.
01:35:17PM      WELCOME TO THE TALK.
01:35:18PM      IT'S CALLED --
01:35:21PM      EASY DEPLOYMENT OF PIP.
01:35:23PM      MY NAME IS DAN TRACY.
01:35:24PM      YOU CAN FIND ME ON GITHUB, TWITTER.
01:35:29PM      USUAL GO DJT5019.
01:35:35PM      A BUNCH OF INITIALS AND NUMBERS.
01:35:37PM      I WORK AT AWEBER COMMUNICATIONS.
01:35:40PM      BASED OUT OF PENNSYLVANIA.
01:35:41PM      YOU CAN ACTUALLY SEE OUR COMPANY LOGO AROUND THE
01:35:44PM      LANYARDS YOU'RE ALL WEARING.
01:35:47PM      HERE I DO A LOT OF DEVOPS STUFF.
01:35:53PM      I LIKE MESSING WITH CHEF.
01:35:55PM      AND WHEN I STARTED WORKING, I REALIZED WE HAD A LOT
01:35:59PM      OF WAYS TO TAKE OUR CODE, AND PUSH IT OUT IN FRONT
01:36:02PM      OF CUSTOMERS.
01:36:03PM      SOME OF THEM WERE GOOD, SOME OF THEM WEREN'T.
01:36:06PM      BUT I'LL GET INTO THAT A LITTLE MORE LATER.
01:36:08PM      SO, YOU KNOW, WHAT'S THIS TALK ABOUT?
01:36:11PM      I'LL BE UP FRONT AND HONEST WITH YOU.
01:36:14PM      I HAVE A LOT OF OPINIONS ABOUT DEPLOYMENTS AND I'M
01:36:19PM      PRETTY VOCAL ABOUT TELLING THEM TO PEOPLE.
01:36:22PM      ONE OF THE THINGS I BELIEVE IN -- THE SLIDES ARE
01:36:24PM      OVER THERE.
01:36:25PM      IT SHOULD BE AS EASY AS PUSHING A BUTTON.
01:36:27PM      TURN KEY, YOUR CODE GOES LIVE AND YOU WATCH YOUR
01:36:32PM      MONEY RAIN FROM THE HEAVENS.
01:36:34PM      [LAUGHTER]
01:36:35PM      CONVERSELY, REVERTING SHOULD ALSO BE AS EASY AS
01:36:38PM      PUSHING A BUTTON.
01:36:39PM      SOMETIMES DEPLOYMENTS GO SOUTH.
01:36:41PM      IT'S NOT THE END OF THE WORLD.
01:36:43PM      WE ALL MAKE MISTAKES.
01:36:46PM      BEING ABLE TO REVERT, MAKES FOR A REALLY NICE
01:36:48PM      PROCESS.
01:36:49PM      WHEN YOU PUSH CODE DOWN, AND YOU ARE UNABLE TO
01:36:51PM      REVERT THOSE CHANGES, YOU'RE JUST ENTERING A WORLD
01:36:54PM      OF PAIN AND IT'S ABSOLUTELY AWFUL.
01:36:57PM      SO PRETTY MUCH BAD PUSHES SHOULDN'T BE THE END OF
01:37:02PM      THE WORLD.
01:37:03PM      BAD DEPLOYMENT PROCESSES IMPEDE DEVELOPMENT SPEED
01:37:06PM      AND INNOVATION.
01:37:08PM      BAD DEPLOYMENT PROCESSES, I BELIEVE --
01:37:12PM      [NO AUDIO]
01:37:16PM      PUSH CODE OUT EASILY, SO THE PUSHES BECOME LARGER
01:37:19PM      AND LARGER.
01:37:20PM      THE LARGER AND LARGER A PUSH BECOMES, THE MORE RISK
01:37:23PM      IS ASSOCIATED WITH PUSHING OUT YOUR CODE WHICH
01:37:26PM      INCREASE --
01:37:27PM      [NO AUDIO]
01:37:31PM      SO --
01:37:37PM      COME UP WITH A GOOD DEVELOPMENT, OR A GOOD
01:37:40PM      DEPLOYMENT PROCESS.
01:37:42PM      ON THE OTHER HAND, A GOOD DEVELOPMENT DEPLOYMENTS
01:37:47PM      ALLOWS FOR EASY DEPLOYS.
01:37:50PM      MEANS EASIER AND MORE OFTEN WHICH REDUCES THE CODE
01:37:53PM      YOU'RE DEPLOYING, LOWERS THE RISK, AND PERPETUATES,
01:37:59PM      BUT IN AN ACTUAL POSITIVE WAY.
01:38:01PM      ON THE SAME NOTE, EASY ROLLBACKS ALSO TIE INTO THIS
01:38:06PM      FEEDBACK LOOP AS WELL.
01:38:08PM      EVERYBODY MAKES MISTAKES.
01:38:09PM      IF YOU'RE ABLE TO ROLL THOSE MISTAKES BACK EASILY,
01:38:13PM      THEY'RE NO LONGER SHOW STOPPING.
01:38:14PM      SO PEOPLE ARE ACTUALLY MORE WILLING TO MAKE THOSE
01:38:17PM      MISTAKES, KNOWING THAT THEIR CODE PUSH GO SOUTH,
01:38:21PM      IT'S NOT EXACTLY THE END OF THE WORLD.
01:38:23PM      WITH TRIAL COMES ERROR AND WITH ERROR COMES GROWTH.
01:38:29PM      I BELIEVE THAT CODE ISN'T ACTUALLY USEFUL UNTIL
01:38:32PM      IT'S BEING USED.
01:38:34PM      YOU CAN HAVE THE GREATEST FUNCTIONALITY SITTING IN
01:38:37PM      SOURCE CODE KEY AND UNTIL IT'S SITTING IN FRONT OF
01:38:41PM      SOMEONE BEING USED, YOU'RE NOT GETTING A RETURN ON
01:38:45PM      YOUR INVESTMENT.
01:38:48PM      UNUSED CODE CAN BE NOISE BUT PRACTICALLY USELESS.
01:38:51PM      BUT LET'S CONSIDER A HYPOTHETICAL SITUATION.
01:38:55PM      LET'S SAY YOU HAVE A NEW FEATURE THAT'S READY FOR
01:38:57PM      PRODUCTION.
01:38:58PM      OR, YOU HAVE A BUG FIX THAT WAS NEEDED IN
01:39:01PM      PRODUCTION, TEN MINUTES AGO.
01:39:03PM      SOMETHING'S BREAKING AND ALL OF -- THAT'S LEFT TO
01:39:07PM      DO IS DEPLOY THE CODES YOU HAVE, SO YOU JUST WANT
01:39:09PM      TO SHIP IT.
01:39:10PM      I MEAN, WHAT'S THE WORSE THAT COULD HAPPEN?
01:39:12PM      AND ANYONE KNOWS THE CONTEXT OF THAT SQUIRREL, I'VE
01:39:15PM      SEEN IT EVERY, BUT I DON'T ACTUALLY KNOW WHAT IT'S
01:39:18PM      FOR.
01:39:19PM      YOU GO TO PUSH OUT YOUR CODE, THINKING, THIS IS
01:39:21PM      GOING TO BE GREAT.
01:39:22PM      GOING TO FIX A PROBLEM, LOOK LIKE A HERO AND NEXT
01:39:25PM      THING YOUR KNOW YOUR SHIP CAPSIZES, YOU LOOK LIKE A
01:39:29PM      FOOL.
01:39:29PM      YOU COULD POTENTIALLY BE RUNNING DIFFERENT VERSIONS
01:39:33PM      OF YOUR PRODUCT IN PRODUCTION.
01:39:35PM      DIFFERENT VERSIONS OF CODE MEANS ONE VERSION OF THE
01:39:37PM      CODE COULD BE WORKING, THE OTHER COULD NOT.
01:39:40PM      CUSTOMERS COULD BE HAVING A VERY BAD EXPERIENCE.
01:39:43PM      YOU DON'T HAVE A GOOD ROLLBACK PLAN, YOU'RE STUCK,
01:39:46PM      PANICKING UNTIL YOU TRY TO FIGURE SOMETHING OUT,
01:39:49PM      WHICH COULD BE MINUTES, HOURS, MAYBE IN WORSE CASE,
01:39:51PM      A DAY OR SO.
01:39:52PM      OR, IF YOU PUSH OUT CODE, CALLS AN OUTAGE.
01:39:58PM      MAYBE YOU DON'T HAVE GOOD ENOUGH INTROSPECTION TO
01:40:01PM      KNOW IF THE DEPLOYMENTS ACTUALLY SUCCEEDED.
01:40:04PM      AND THAT'S AN ABSOLUTE NIGHTMARE.
01:40:07PM      SO ASK YOURSELF, DO YOU HAVE MORE THAN ONE WAY TO
01:40:12PM      DEPLOY CODE ACROSS YOUR NAMES AND -- TEAMS AND
01:40:17PM      ORGANIZATIONS?
01:40:17PM      IF SO, THAT'S NOT SO BAD.
01:40:19PM      THAT GIVES TEAMS AUTONOMY, BUT IF THEY HAVE MORE
01:40:22PM      THAN ONE WAY TO DEPLOY CODE AMONGST THE TEAM,
01:40:25PM      THAT'S A RED FLAG.
01:40:28PM      PERHAPS, THERE'S LEGACY DEPLOYMENT STUFF THERE THAT
01:40:34PM      THEY NEVER UPDATED OR CONVALESCE INTO CURRENT
01:40:37PM      DEPLOYMENT, PIPELINE, OR, YOU KNOW, MAYBE SOMEBODY
01:40:40PM      THOUGHT THEY WERE CLEVER.
01:40:42PM      WHO KNOWS.
01:40:43PM      HAVING MULTIPLE DEPLOYMENTS AMONG TEAMS MEANS
01:40:47PM      HAVING DIFFERENT KNOWLEDGE AND PROCESSES FOR PEOPLE
01:40:49PM      COMING ON, WHICH MAKES MOVING FROM TEAM TO TEAM
01:40:54PM      MORE DIFFICULT.
01:40:56PM      MAKE IT UNIVERSAL, IT CAN BE VERY WELL DOCUMENTED
01:40:58PM      AND IT'S EASY TO GRAB THAT KNOWLEDGE.
01:41:02PM      IF YOU HAVE MORE THAN ONE WAY TO DEPLOY --
01:41:06PM      [NO AUDIO]
01:41:09PM      I'VE ACTUALLY SEEN THAT HAPPEN ONCE.
01:41:11PM      WE HAD A PACKAGE FOR THE MAIN SOURCE CODE AND
01:41:17PM      PYTHON PACKAGES FOR THE CORRESPONDING LIBRARIES,
01:41:20PM      ALL OVER THE FILE SYSTEM PUSHING OUT A CHANGE FOR
01:41:23PM      THAT WAS AGONIZING.
01:41:25PM      SO TO GO INTO A LITTLE MORE ABOUT OUR OLD
01:41:29PM      DEPLOYMENT SETUP, I TOUCHED ON THIS BEFORE.
01:41:31PM      WE DID USE DEB END PACKAGING.
01:41:34PM      IT WORKED FOR A WHILE, UNFORTUNATELY THE PROCESS
01:41:36PM      ITSELF WAS NEVER MAINTAINED.
01:41:38PM      SO THE TOOLS BAKE CRAFTY.
01:41:40PM      A LOT WERE ABANDONED AND BECAUSE OF THAT, PEOPLE
01:41:43PM      STARTED WANTING OR DESIRING A NEW WAY TO DEPLOY
01:41:50PM      THEIR CODE.
01:41:51PM      ONE OF THE WAYS THEY CAME UP WITH WAS MY -- I
01:41:54PM      ASSUME THAT THE THOUGHT WAS, WE'RE GOING TO MAKE
01:41:57PM      THIS REALLY EASY.
01:41:58PM      WHAT WE'RE GOING TO DO IS JUST TAKE A SNAPSHOT OF
01:42:01PM      OUR SOURCE TREE, TEAR IT UP AND THROW IT YOU OVER
01:42:05PM      THE FENCE.
01:42:06PM      WHAT COULD GO WRONG?
01:42:08PM      THAT WAS A FAILURE AND WE HAD TO KILL THAT AS SOON
01:42:11PM      AS POSSIBLE.
01:42:11PM      THAT WAS JUST BAD.
01:42:13PM      BUT FROM THAT, WE KIND OF DISCOVERED THAT WE CAN
01:42:17PM      TAKE THOSE TAR BALLS AND UPLOAD THEM.
01:42:21PM      VERSION THEM.
01:42:21PM      YOU KNOWN, BE SANE ABOUT IT.
01:42:23PM      SO WE BEGAN TO DO THAT.
01:42:25PM      AND THE THOUGHT WAS, IF WE HAVE THOSE PACKAGES
01:42:30PM      UPLOADED ON OUR INTERNAL REPOSITORY, WE CAN MODIFY
01:42:34PM      OUR CHEF SOURCE CODE TO INSTALL THEM.
01:42:37PM      WE CAN USE CHEF FOR OUR DEPLOYMENTS.
01:42:40PM      THAT WORKED OUT FOR A LITTLE WHILE BUT WHAT WE
01:42:43PM      FOUND WE RUN CHEF EVERY HALF HOUR OR SO, SO WE'RE
01:42:47PM      DEPLOYING EVERY HALF HOUR OR SO, SO WHETHER YOU
01:42:49PM      WANT TO OR NOT, THAT WAS NOT THAT GREAT.
01:42:53PM      WE HAD LESS CONTROL WHEN OUR CODE WENT OUT AND WHAT
01:42:56PM      ACTUALLY WENT OUT.
01:42:57PM      THE FOURTH ONE IS THE ONE I'M GOING TO BE TALKING
01:43:00PM      ABOUT TODAY.
01:43:00PM      WE USE PUSH BASED PIP INSTALLATIONS.
01:43:03PM      TOOK THOSE SAME PYTHON PACKAGES ON OUR
01:43:08PM      REPOSITORIES, OUR INTERNAL PYPI AND HAVE SOME
01:43:12PM      FABRIC GLUE AND STUFF, PUSH STUFF OUT TO CERTAIN
01:43:16PM      TARGETS.
01:43:16PM      IT WASN'T SO BAD, BUT MISSING A LOT OF MACHINERY
01:43:21PM      REQUIRED.
01:43:21PM      THE POINT I'M TRYING TO MAKE HERE IS, WE HAD FOUR
01:43:23PM      DIFFERENT WAYS TO DEPLOY SOURCE CODE.
01:43:25PM      THEY WERE ALL SLIGHTLY DIFFERENT, SO IT WAS MORE
01:43:28PM      LIKE EIGHT OR NINE.
01:43:30PM      WHAT WE NEEDED TO DO WAS JUST CHOOSE A SINGLE WAY
01:43:32PM      TO DEPLOY OUR CODE AND ITERATE ON IT.
01:43:34PM      JUST KEEP ONE WAY -- ONE STANDARD WAY TO DEPLOY
01:43:40PM      YOUR CODE AND THINGS WILL BE A LOT LESS PAINFUL.
01:43:44PM      SPEND TIME SUNSETTING OTHER WAYS TO DEPLOY.
01:43:51PM      [NO AUDIO]
01:43:54PM      DECIDE TO USE IT EVERYWHERE.
01:43:56PM      LIKE I SAID, WE WERE RUNNING MACHINERY, ITERATED
01:44:02PM      AROUND IT, AND MADE FOR A PRETTY NICE PROCESS.
01:44:06PM      SO -- SOME OF THE PIECES THAT WERE REQUIRED WERE
01:44:09PM      PYTHON, OBVIOUSLY, AND A SET OF POOLS TO BUILD AND
01:44:13PM      --
01:44:15PM      WHEN WE VERSION OUR PACKAGES, WE TRY TO COMPLY WITH
01:44:18PM      F 440, THE STANDARD PYTHON VERSIONING THEME.
01:44:21PM      I THINK IT WAS RATIFIED LAST YEAR OR THE YEAR
01:44:24PM      BEFORE.
01:44:24PM      I CAN'T RECALL OFF THE TOP OF MY HEAD.
01:44:26PM      ONE OF MY COWORKERS SET UP THE -- WHICH MANAGES THE
01:44:32PM      VERSIONS WHICH MANAGES GIT TAGS.
01:44:34PM      INTERNAL GITHUB AND WE USE THAT FOR SCM MANAGEMENT.
01:44:39PM      PIP ITSELF IS USED TO INSTALL THE PYTHON PACKAGES,
01:44:43PM      BELIEVE IT OR NOT.
01:44:44PM      JENKINS USED FOR CONTINUOUS INTEGRATION AND
01:44:46PM      BUILDING THOSE PACKAGES.
01:44:47PM      CHEVY IS USED FOR INITIAL DEPLOYMENT AND SERVICE
01:44:51PM      DISCOVERY.
01:44:51PM      SO WE FIND OUT WHICH NODES GET BASED ON WHICH CHEF
01:44:57PM      SERVICES.
01:44:58PM      AND FABRIC WAS THE MAGIC SAUCE GLUING ALL THIS
01:45:01PM      TOGETHER.
01:45:02PM      SO LET'S GET INTO HOW ALL THIS WORKS.
01:45:07PM      JUST AS A KIND OF OVERHEAD OF OUR STRUCTURE.
01:45:11PM      WE DO USE GITHUB INTERNALLY FOR INDIVIDUAL PROJECT
01:45:15PM      REPOSITORIES.
01:45:17PM      ON JENKINS, WE HAVE PROJECT-SPECIFIC JOBS.
01:45:20PM      THAT IS A JOB FOR PRODUCT X WHICH BUILDINGS TESTS,
01:45:25PM      RUNS FABRIC -- RUNS FLAKY 8, PIP 8, BUILDS STOCKS
01:45:30PM      AND PUSHES STOCK OUT TO OUR PYPI.
01:45:33PM      SO THE PROCESS LOOKS LIKE THIS.
01:45:35PM      DEV COMMIT, THEY MAKE CHANGES TO THE SOURCE TREE
01:45:40PM      AND THEY WANT TO MAKE A DEPLOY, OR WHATEVER THEY
01:45:43PM      WANT TO DO.
01:45:44PM      WHEN THEY MERGED TO MASTER, GITHUB NOTIFIES JENKINS
01:45:48PM      THROUGH A WEB HOOK KICKS OFF A BUILD OF THE
01:45:52PM      PROJECT-SPECIFIC JOB.
01:45:52PM      THE PROJECT-SPECIFIC JOB BUILDS THE PACKAGE,
01:45:55PM      UPLOADS TO INTERNAL PYPI SERVER.
01:45:58PM      WE HAVE ONE -- AND I FORGET WHAT IT'S CALLED.
01:46:02PM      IT WORKS OUT PRETTY NEAT.
01:46:04PM      WE MIRROR PACKAGES WE NEED THERE, JUST IN CASE, YOU
01:46:07PM      KNOW, PYPI, THE PYTHON.ORG GOES DOWN OR SOMETHING
01:46:11PM      HAPPENS, WE HAVE COPIES OF OUR CODE INTERNALLY.
01:46:13PM      SO AFTER THE PACKAGE IS BUILT AND PUSHED OUT, WE
01:46:17PM      NOTIFY A GENERIC DEPLOYMENT JOB, TELL IT'S GENERIC
01:46:22PM      BECAUSE HE'S WEARING SWEET SHADES.
01:46:25PM      THE PROJECT DEPLOYS -- THE PROJECT USES THE JENKINS
01:46:28PM      PARAMETERIZED JOB TRIGGER WHICH IS A PLUGIN
01:46:32PM      PROVIDED BY JENKINS, YOU CAN NOTIFY ANOTHER JOB TO
01:46:36PM      BUILD BASED ON THE ACTIONS YOUR JOB IS TAKEN.
01:46:38PM      YOU CAN PROVIDE ANY NUMBER OF PARAMETERS TO SAID
01:46:41PM      JOB.
01:46:42PM      THE PARAMETERS THAT WE PROVIDE ARE THE ENVIRONMENT,
01:46:44PM      THE CHEF ROLL, THE NAME OF THE PACKAGE, AND AN
01:46:47PM      OPTIONAL VERSION FOR PINNING.
01:46:49PM      I'LL GO BACK AND MENTION THAT LATER WHEN I TALK
01:46:52PM      ABOUT ROLLBACKINGS.
01:46:55PM      THE GENERIC DEPLOYMENT JOB, QUERY A CHEF SERVER.
01:47:01PM      THIS IS WHERE FABRIC ENTERS THE SCENES.
01:47:04PM      THE NEXT SLIDES ARE ALL WITHIN THE CONTEXT OF
01:47:07PM      FABRIC.
01:47:08PM      GIVEN THE CHEF ROLL, WE QUERY CHEF USING THE ROLL
01:47:13PM      NAME AND THE ENVIRONMENT.
01:47:14PM      FOR EACH NOTE RETURN IN THE CHEF SEARCH, WE DO THE
01:47:17PM      FOLLOWING:
01:47:19PM      [NO AUDIO]
01:47:25PM      AND THE PACKAGE NAME, EVERYBODY'S HAPPY, NICE AND
01:47:27PM      EASY.
01:47:29PM      AFTER THE PACKAGE IS INSTALLED, WE RESTART THE API
01:47:34PM      THROUGH -- TO LOAD THE NEW CODE.
01:47:35PM      AFTER THE API HAS BEEN STARTED OR WORKERS BEEN
01:47:40PM      BOUNCED, WE TEST OUT THE NEW CODE LIKE FOR THE API
01:47:45PM      WE, MAKE SURE RETURN IS 200 AND OKAY.
01:47:49PM      AND IT SHOULD BE OPERATIONAL FOR THE DURATION OF,
01:47:52PM      YOU KNOW, UNTIL IT WILL BE DEPLOYED NEXT.
01:47:55PM      AFTER THE CODE'S BEEN BOUNCED AND TEST SUCCEED,
01:47:59PM      CONTROL FLOW ACTUALLY RUNS BACK TO THE
01:48:01PM      PROJECT-SPECIFIC JOB.
01:48:02PM      THIS IS DONE FOR A VERY SPECIFIC REASON.
01:48:05PM      TAKE, FOR EXAMPLE, THE TEST OF THE NEW API FAILS IN
01:48:09PM      THE LAST JOB.
01:48:10PM      IF WE DIDN'T RETURN CONTROL FLOW BACK TO THE
01:48:13PM      ORIGINAL DEPLOYMENT JOB WE COULD NOT FAIL THAT JOB,
01:48:16PM      WHICH WOULDN'T RAISE ENOUGH ALERTS.
01:48:20PM      THIS CHANNEL IS IN A PYTHON.
01:48:22PM      IT DOESN'T PASS UNLESS SPECIFICALLY SILENCED.
01:48:26PM      WE WANT TO KNOW WHEN OUR DEPLOYMENTS FAIL, SO WE
01:48:28PM      CAN FIGURE OUT WHAT WENT WRONG.
01:48:30PM      AFTER CONTROL FLOW RETURNS BACK TO THE
01:48:32PM      PROJECT-SPECIFIC JOB, WE JUST DO A BUNCH OF PUSH
01:48:35PM      NOTIFICATIONS, SO PEOPLE ACTUALLY KNOW WHAT
01:48:37PM      HAPPENED.
01:48:42PM      DEPLOYMENT LIVE.
01:48:46PM      MAYBE e-MAIL PEOPLE OF THE BUILD BROKE, YOU KNOW,
01:48:49PM      THE BLAME e-MAIL, EVERYONE LOVES THAT ONE.
01:48:53PM      AFTER THAT, PRETTY MUCH RINSE AND REPEAT AND THAT'S
01:48:57PM      ALL THERE IS TO THAT.
01:48:58PM      THAT PROCESS IS FAIRLY SIMPLE.
01:49:03PM      THE KEY TAKEAWAYS FROM THIS DEPLOYMENT PROCESS ARE,
01:49:08PM      ONE, YOU CAN CHOOSE ONE DEPLOYMENT --
01:49:14PM      [NO AUDIO]
01:49:17PM      USING THIS MECHANISM CAN BE DEPLOYED IN PARALLEL.
01:49:21PM      THAT IS, YOU CAN USE FABRIC'S PARALLEL TO PUSH IT
01:49:26PM      ALL OUT AT ONCE.
01:49:28PM      WHICH ISN'T NECESSARILY A BAD THING.
01:49:29PM      HOWEVER IF YOU'RE BOUNCING THE SURFACES THEY SHOULD
01:49:33PM      BE CONSEQUENCLY.
01:49:35PM      AND YOU JUST SUPPLIED AND OUTAGE AND NOBODY WANTS
01:49:38PM      THAT.
01:49:39PM      IT MAKES FOR EASY ROLLBACKS.
01:49:41PM      I MENTIONED A BIT EARLIER, IN JENKINS, WE SET IT UP
01:49:46PM      SO IT ACCEPTS A VERSION.
01:49:47PM      YOU CAN BUILD THE GENERIC DEPLOYMENT JOB, PROVIDE
01:49:51PM      ALL THE INFORMATION YOU WANT, AND IF YOU SPECIFY A
01:49:53PM      VERSION, THAT VERSION WILL BE INSTALLED TO THE
01:49:55PM      CORRESPONDING ENVIRONMENT THAT YOU PROVIDE.
01:49:57PM      SO IF SOMETHING GOES WRONG, THE LATEST BUILD FAILS,
01:50:01PM      YOU JUST CLICK ON THE JENKINS JOB, PROVIDE YOUR
01:50:03PM      VERSIONS, PUSH THE BUTTON, AND PRODUCTION IS SAVED.
01:50:06PM      IT'S PRETTY NEAT.
01:50:09PM      AND ONE OF THE COOLEST THINGS ABOUT THIS IS, OTHER
01:50:12PM      CODE BASES CAN ACTUALLY USE THIS SIMILAR DEPLOYMENT
01:50:15PM      SETUP.
01:50:16PM      THE ONLY THINGS TIEING THIS TO PYTHON IS PIP AND
01:50:22PM      OUR PYPI SERVER.
01:50:23PM      WE NOTICED THIS AFTER UPROLLING UPDATES TO NODEJS.
01:50:30PM      WE USE INTERNAL MPM SERVER FOR MANAGING THE SOURCE
01:50:35PM      CODE.
01:50:36PM      THIS ACTUALLY WORKED OUT VERY NICELY.
01:50:39PM      HOWEVER, WITH ALL GOOD THINGS, IT'S NOT ALL
01:50:44PM      SKITTLES AND BEER.
01:50:46PM      THERE ARE SOME PROBLEMS HERE.
01:50:48PM      FIRST AND FOREMOST, FIXING AND UPDATING OLD
01:50:51PM      DEPLOYMENT PROCESSES IS VERY PAINFUL.
01:50:55PM      IT'S ALWAYS LIKE THAT.
01:50:56PM      PEOPLE LIKE TO TACK ON LEGACY STUFF TO THAT WHEN
01:51:00PM      THEY DON'T WANT TO TOUCH IT.
01:51:03PM      THERE'S NOTHING YOU CAN DO BUT SLUG THROUGH IT.
01:51:05PM      THIS CANNOT BE A ONE-PERSON THING TO GO BACK AND
01:51:08PM      UPDATE.
01:51:09PM      IT REQUIRES TEAM WORK, COORDINATION AND EVERYBODY
01:51:11PM      NEEDS TO BUY INTO THIS PROCESS.
01:51:14PM      IF YOU DON'T HAVE THAT BUY IN, YOU'LL NEVER
01:51:16PM      ACTUALLY GET THIS THING OUT AND ABOUT.
01:51:19PM      ONE OF THE THINGS THAT WE DISLIKE ABOUT THIS
01:51:22PM      PROCESS IS STRONGLY COUPLED WITH CHEF FOR SERVICES
01:51:25PM      DISCOVERY.
01:51:26PM      WE USE CHEF FOR INITIAL -- FOR OUR NODE
01:51:29PM      PROVISIONING AND IT DOES DO THE INITIAL DEPLOYMENT
01:51:32PM      OF OUR PACKAGES THAT IS, WHEN YOU BRING UP A NEW
01:51:35PM      VM, IT WILL DO A PIP INSTALL OF YOUR PACKAGE, AND
01:51:38PM      IT'S OUT OF THE EQUATION.
01:51:40PM      HOWEVER, WE ALSO USE FOR SERVICES DISCOVERY, WHICH
01:51:44PM      IT CAN WORK PRETTY WELL IN SOME CASES, BUT WE'VE
01:51:46PM      BEEN LESS THAN IMPRESSED WITH SOME OF THE
01:51:48PM      EDUCATIONS.
01:51:55PM      MOSTLY SOLAR.
01:51:56PM      JENKINS ITSELF IS NOT THE GREATEST CONTINUOUS
01:51:59PM      DEPLOYMENT SERVER.
01:52:00PM      IT'S GREAT FOR CONTINUOUS INTEGRATION.
01:52:03PM      RUNS TEST VERY WELL, TRIGGER OTHER JOBS, ALL VERY
01:52:07PM      NICE.
01:52:07PM      ACTUALLY HAVING IT MANAGE OUR DEPLOYMENTS HAS
01:52:11PM      GOTTEN KIND OF PAINFUL.
01:52:13PM      AND THE TRIGGER PARAMETERIZED BUILD PLUGIN THAT I
01:52:17PM      MENTIONED IS NOT WITHOUT IT'S FLAWS.
01:52:20PM      YOU CANNOT PASS ENVIRONMENT VARIABLES PROCEDURAL
01:52:24PM      AND INTRODUCES NEW HASH CONTEXT.
01:52:26PM      IT'S GOT A LOT OF WEIRD EDU CASES THAT YOU KIND OF
01:52:30PM      HAVE TO WORKAROUND.
01:52:32PM      AT THAT POINT, YOUR CONTINUOUS DEPLOYMENT SERVER IS
01:52:35PM      KIND OF FIGHTING AGAINST YOU AND IF THAT HAPPENS,
01:52:37PM      YOU'RE KIND OF FIGHTING A LOSING BATTLE.
01:52:39PM      AND WITH MOST NEW PROJECTS, OUR INITIAL VERSION OF
01:52:44PM      THE DEPLOYMENT WAS PRETTY GNARLY.
01:52:47PM      WE USED FABRIC IN A PRETTY WEIRD WAY.
01:52:51PM      WHAT WE DID IS, WE HAVE A SEPARATE REPOSITORY WITH
01:52:54PM      OUR FABRIC FILE AND A VERSION OF THAT SEPARATELY,
01:52:58PM      MAINTAINS ITS REQUIREMENTS AND ALL THE THINGS THAT
01:53:00PM      THAT LEAVES -- ALL THE THINGS THAT FABRIC FILE
01:53:04PM      NEEDS TO OPERATE.
01:53:05PM      HOWEVER, FABRIC ITSELF DOESN'T REALLY LIKE THE IDEA
01:53:09PM      OF HAVING -- HOW DO I SAY THIS?
01:53:13PM      WE PACKAGED UP THE FABRIC FILE INTO ITS OWN LITTLE
01:53:16PM      S DISK, UPLOAD INTO INTERM PYPI, HOWEVER THE
01:53:21PM      VERSION WE WERE USING, DIDN'T REALLY LIKE U PIP
01:53:24PM      INSTALLING FABRIC FILES.
01:53:28PM      WE GET AROUND USING A SEPARATE GITHUB REPOSITORY.
01:53:37PM      SO THOSE ARE SOME SHORTCOMINGS.
01:53:39PM      IT'S NOT ALL DOOM AND GLOOM.
01:53:41PM      WE DO WANT TO MOVE ON FROM HERE.
01:53:43PM      SOME OF THE NEXT STEPS WE WANT TO TAKE ARE, WE WANT
01:53:45PM      TO HOP ABOARD THE DOCKER HYPE TRAIN.
01:53:48PM      EVERYBODY SEEMS TO BE DOING IT.
01:53:50PM      IS IT SEEMS LIKE IT'S REALLY NEAT AND SOLVE ALL THE
01:53:53PM      PROBLEMS WE HAVE AND DIDN'T REALLY KNOW WE HAD.
01:53:55PM      WE -- LOOK AT ROLLS LIKE RUNDECK INSTEAD OF JENKINS
01:54:01PM      AS A CONTINUOUS DELIVERY SERVER.
01:54:04PM      IF ANYBODY USING THIS, I'D LIKE TO TALK TO YOU.
01:54:08PM      WE'VE BEEN KNOCKING IT AROUND, BUT HAVEN'T REALLY
01:54:13PM      SETTLED ON IT.
01:54:14PM      BUT FROM WHAT I'VE READ, IT'S A SERVICE THAT SITS
01:54:17PM      OUT HERE AND RUNS ARBITRARY BASH.
01:54:20PM      KIND OF LIKE JENKINS, BUT NOT REPOSITORY CENTRIC.
01:54:24PM      SOME OF THE THINGS TO INTRODUCE TRADITIONALLY ARE
01:54:27PM      TREND-BASED MONITORING.
01:54:28PM      LIKE SKYLINE, WHICH, I BELIEVE, IS USED BY, I CAN'T
01:54:31PM      REMEMBER THE NAME OF THE COMPANY OFF THE TOP OF MY
01:54:33PM      HEAD.
01:54:33PM      OR, YOU KNOW...
01:54:36PM      [NO AUDIO]
01:54:42PM      BUT THEY DON'T EXPOSE TRENDS EASILY.
01:54:44PM      THAT IS, IF YOU PUSH OUT A CHANGE, YOU KNOW, YOU
01:54:50PM      PUSH OUT A DEPLOYMENT, AND SOMETHING BEGINS TO
01:54:53PM      DEVIATE, IT'S KIND OF DIFFICULT TO PINPOINT THAT
01:54:56PM      WITH A VERY NARROW SCOPE OF YOUR METRICS.
01:54:59PM      SOMETHING LIKE TREND-BASED MONITORING, YOU CAN HAVE
01:55:02PM      HISTORICAL DATA TO COMPARE AGAINST AND RAISE ALERTS
01:55:04PM      WHEN THINGS SEEM ANOMALOUS, WHICH IS VERY USEFUL.
01:55:09PM      INSTEAD OF USING CHEF AS A SERVICE DISCOVERY
01:55:11PM      MECHANISM, WE WANT TO USE SOMETHING, WELL, WE WERE
01:55:14PM      LOOKING AT SOMETHING LIKE, CONSOLE, SED, OR THE
01:55:17PM      VARIABLE, ZOOT KEEPER, WHICH ARE MORE WELL SUITED
01:55:22PM      TO THE TASK AT HAND.
01:55:24PM      ADDITIONALLY, THE DEPLOYMENT PROCESS THAT I KIND OF
01:55:26PM      DESCRIBED HERE IS VERY SIMPLISTIC.
01:55:28PM      IT'S -- THERE'S NOT A LOT OF MOVING PARTS WHICH IS
01:55:31PM      KIND OF ONE OF ITS BENEFITS, BUT DOESN'T REALLY
01:55:34PM      FACILITATE COMPLEX DEPLOYMENTS THAT OTHERS MAY
01:55:38PM      NEED.
01:55:42PM      WE KIND OF WANT TO LOOK AT MORE SOPHISTICATED
01:55:46PM      DEPLOYMENTS INCLUDING PARTIAL ROLLOUTS.
01:55:48PM      FOR EXAMPLE, IF YOU'RE ON -- IF YOU USE AMAZON,
01:55:51PM      MAYBE DEPLOY ONE AVAILABILITY ZONE, SEE HOW THAT
01:55:55PM      GOES BEFORE SPRINGING THE CODE EVERYWHERE.
01:55:58PM      ADDITIONALLY WE WANT TO LOOK AT DESIGNATING ONE SET
01:56:00PM      OF NODES OR VMS, AS CANARIES.
01:56:05PM      PUSH THE CODE OUT THERE, MAKE SURE IT DOESN'T
01:56:12PM      BREAK.
01:56:13PM      IF THE CANARIES DIE, THE REST OF THE CODE IS STILL
01:56:16PM      FUNCTIONAL.
01:56:17PM      THAT MEANS, ONLY A VERY SMALL SUBSET OF YOUR
01:56:20PM      COMMERCE IS IMPACTED BY THIS OUTAGE AND NOT
01:56:24PM      EVERYBODY UNDER THE SUN.
01:56:25PM      WHICH IS A BAD, BAD TIME.
01:56:29PM      SO KIND OF TO WRAP THIS UP, GOOD DEPLOYMENTS CAN
01:56:35PM      HELP INNOVATION.
01:56:37PM      BAD DEPLOYMENTS CAN HURT IT.
01:56:40PM      THAT'S THAT POSITIVE AND NEGATIVE FEEDBACKS LOOP I
01:56:43PM      DISCUSSED EARLIER.
01:56:45PM      DEPLOYMENT OF PYTHONS ARE NEVER DONE AND NEVER
01:56:48PM      TRULY FINISHED.
01:56:49PM      THEY SIMPLY EXIST AS STATES IN TIME.
01:56:52PM      THEY REQUIRE CONSTANT MAINTENANCE ON LOVE.
01:56:54PM      FOR THE MORE THEY REQUIRE MORE THAN ONE PERSON
01:56:57PM      MAINTAINING THEM.
01:57:00PM      THE MORE PEOPLE YOU HAVE INVOLVED WITH THIS, THE
01:57:02PM      BETTER.
01:57:02PM      YOU HAVE A WIDER SPECTRUM, AND A VIEW OF THE
01:57:06PM      PROBLEM AT HAND AND HOW TO SOLVE IT WHEN NOT --
01:57:16PM      REDUCE THE SIZE AND SCOPE OF YOUR DEPLOYS, AND
01:57:20PM      ITERATE ON WHAT WORKS.
01:57:25PM      [APPLAUSE]
01:57:31PM      >> ALL RIGHT.
01:57:32PM      SO THANKS, DON.
01:57:33PM      WE'RE GOING TO HAVE ONE-ON-ONE QUESTIONS, SO IF YOU
01:57:35PM      HAVE ANY QUESTIONS, COME HERE, AND WE'RE GOING TO
01:57:37PM      BE MOVING YOU TO AN OPEN SPACE AFTER.
01:57:40PM      SO ONCE AGAIN, THANK YOU, DAN.
01:57:42PM      >> THANK YOU VERY MUCH.
01:57:43PM      [APPLAUSE]
01:57:53PM      [MUSIC PLAYING]
01:59:57PM
02:00:37PM
02:00:37PM
02:02:23PM
02:09:06PM
02:09:06PM
02:12:56PM
